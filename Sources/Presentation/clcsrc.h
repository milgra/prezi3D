#ifndef clcsrc_h
#define clcsrc_h
#include <stdio.h>
#include <stdlib.h>
#ifdef OSX
#include <OpenGL/gl3.h>
#elif defined IOS
#include <OpenGLES/ES2/gl.h>
#include <OpenGLES/ES2/glext.h>
#endif
#include "MLVector4.h"
#include "CLChar.h"
#include <stdio.h>
#include <stdlib.h>
#include "CLLink.h"
#include "MLMatrix4.h"
#include "MLMatrix4Utils.h"
#include <string.h>
#include "TLSTBTrueTypeFont.h"
#include "loadpng.h"
#include <limits.h>
#include "microutf8.h"
#define kGLUIParagraphTypeOutput    0
#define kGLUIParagraphTypeInput     1
#define kGLUIParagraphAlignLeft     0
#define kGLUIParagraphAlignRight    1
#define kGLUIParagraphAlignCenter   2
#define kGLUIParagraphAlignJustify  3
#define kGLUITrafoAnimatorFinished 0
#define kGLUIAnimationLinear  0
#define kGLUIAnimationEaseIn  1
#define kGLUIAnimationEaseOut 2
#define kGLUIAnimationFinished 0
#include "GLErrors.h"
#define kTLTextMetricsTypeSingleLine  0
#define kTLTextMetricsTypeMultiLine   1
#define kTLTextMetricsAlignLeft    0
#define kTLTextMetricsAlignRight   1
#define kTLTextMetricsAlignCenter  2
#define kTLTextMetricsAlignJustify 3
#include "MLVector3.h"
struct Class
{
	char*	className;
	void*	classId;
};
struct Instance
{
	struct Class*	_class;
	void**	_components;
};
struct PRController;
struct PRController_Class;
struct CLString;
struct CLString_Class;
struct CLObject;
struct CLObject_Class;
struct CLDataList;
struct CLDataList_Class;
struct PRLifeRoom;
struct PRLifeRoom_Class;
struct PRSettings;
struct PRSettings_Class;
struct PRMeasures;
struct PRMeasures_Class;
struct PRInfoView;
struct PRInfoView_Class;
struct PRFontManager;
struct PRFontManager_Class;
struct GLUIImageArea;
struct GLUIImageArea_Class;
struct GLUIElement;
struct GLUIElement_Class;
struct GLUIController;
struct GLUIController_Class;
struct GLUITrafo;
struct GLUITrafo_Class;
struct PRCodingRoom;
struct PRCodingRoom_Class;
struct PRDesignRoom;
struct PRDesignRoom_Class;
struct PRMusicRoom;
struct PRMusicRoom_Class;
struct PRRoom;
struct PRRoom_Class;
struct GLBitmapRGBA;
struct GLBitmapRGBA_Class;
struct GLTextureSquare;
struct GLTextureSquare_Class;
struct GLBitmapRGBAUtils;
struct GLBitmapRGBAUtils_Class;
struct GLUIModel;
struct GLUIModel_Class;
struct GLUIModelDrawer;
struct GLUIModelDrawer_Class;
struct GLUIParagraph;
struct GLUIParagraph_Class;
struct GLUITrafoAnimator;
struct GLUITrafoAnimator_Class;
struct GLUITrafoAnimation;
struct GLUITrafoAnimation_Class;
struct GLFontTrueType;
struct GLFontTrueType_Class;
struct GLUIShader;
struct GLUIShader_Class;
struct TLPixelFont;
struct TLPixelFont_Class;
struct TLPixelText;
struct TLPixelText_Class;
struct GLUIVertexArray;
struct GLUIVertexArray_Class;
struct GLUICursor;
struct GLUICursor_Class;
struct GLUIGlyph;
struct GLUIGlyph_Class;
struct TLTextMetrics;
struct TLTextMetrics_Class;
struct TLFontMetrics;
struct TLFontMetrics_Class;
struct GLTextureMap;
struct GLTextureMap_Class;
struct GLShader;
struct GLShader_Class;
struct PRController
{
	struct PRController_Class* _class;
	void** _components;
	int view_index ; 
	char * pressed_key ; 
	char left_is_pressed ; 
	char right_is_pressed ; 
	float width ; 
	float height ; 
	MLVector3 mouse_up_coords ; 
	MLVector3 mouse_down_coords ; 
	MLVector3 mouse_move_coords ; 
	struct PRLifeRoom * life_room ; 
	struct PRCodingRoom * coding_room ; 
	struct PRDesignRoom * design_room ; 
	struct PRMusicRoom * music_room ; 
	struct PRRoom * actual_room ; 
	struct PRInfoView * info_view ; 
	struct PRInfoView * room_view ; 
	struct PRInfoView * start_view ; 
	struct PRInfoView * zoomed_view ; 
	struct PRSettings * settings ; 
	struct PRMeasures * measures ; 
	struct PRFontManager * font_manager ; 
	struct GLUIController * ui_controller ; 
	struct CLDataList * info_views ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct PRController_Class
{
	char* className;
	void* classId;
	void 	(*init_width_height_resources_path) (struct PRController*, float  , float  , char *  ) ;
	void 	(*build) (struct PRController* ) ;
	void 	(*destruct) (struct PRController* ) ;
	void 	(*step_right) (struct PRController* ) ;
	void 	(*step_left) (struct PRController* ) ;
	void 	(*update) (struct PRController* ) ;
	void 	(*render) (struct PRController* ) ;
	void 	(*scroll_x_y) (struct PRController*, float  , float  ) ;
	void 	(*mouse_down_at_x_y) (struct PRController*, float  , float  ) ;
	void 	(*mouse_up_at_x_y) (struct PRController*, float  , float  ) ;
	void 	(*mouse_move_at_x_y) (struct PRController*, float  , float  ) ;
	void 	(*left_pressed) (struct PRController* ) ;
	void 	(*right_pressed) (struct PRController* ) ;
	void 	(*key_down_characters) (struct PRController*, char *  ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct PRController* ) ;
	void 	(*destruct_CLObject) (struct PRController* ) ;
	void 	(*retain) (struct PRController* ) ;
	void 	(*release) (struct PRController* ) ;
	void 	(*event) (struct PRController*, int  , void *  , void *  ) ;
	void 	(*describe) (struct PRController* ) ;
	
};
struct CLString
{
	struct CLString_Class* _class;
	void** _components;
	struct CLChar * head ; 
	struct CLChar * last ; 
	unsigned long length ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct CLString_Class
{
	char* className;
	void* classId;
	void 	(*init) (struct CLString* ) ;
	void 	(*init_string) (struct CLString*, struct CLString *  ) ;
	void 	(*init_cstring) (struct CLString*, char *  ) ;
	void 	(*destruct) (struct CLString* ) ;
	void 	(*append_character) (struct CLString*, char  ) ;
	void 	(*append_string) (struct CLString*, struct CLString *  ) ;
	void 	(*append_cstring) (struct CLString*, char *  ) ;
	void 	(*remove_all_characters) (struct CLString* ) ;
	void 	(*read_filePath) (struct CLString*, struct CLString *  ) ;
	void 	(*read_file_pointer) (struct CLString*, FILE *  ) ;
	void 	(*write_file_path) (struct CLString*, struct CLString *  ) ;
	void 	(*write_file_pointer) (struct CLString*, FILE *  ) ;
	struct CLString * 	(*string_from_last_component) (struct CLString* ) ;
	struct CLString * 	(*substring_from_index) (struct CLString*, unsigned long  ) ;
	struct CLString * 	(*string_by_removing_extension) (struct CLString* ) ;
	struct CLString * 	(*string_by_removing_last_path_component) (struct CLString* ) ;
	char 	(*contains_string) (struct CLString*, struct CLString *  ) ;
	unsigned long 	(*index_string) (struct CLString*, struct CLString *  ) ;
	char 	(*equals_string) (struct CLString*, struct CLString *  ) ;
	char * 	(*c_string) (struct CLString* ) ;
	void 	(*describe) (struct CLString* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init_CLObject) (struct CLString* ) ;
	void 	(*destruct_CLObject) (struct CLString* ) ;
	void 	(*retain) (struct CLString* ) ;
	void 	(*release) (struct CLString* ) ;
	void 	(*event) (struct CLString*, int  , void *  , void *  ) ;
	void 	(*describe_CLObject) (struct CLString* ) ;
	
};
struct CLObject
{
	struct CLObject_Class* _class;
	void** _components;
	unsigned long retain_count ; 
	
};
struct CLObject_Class
{
	char* className;
	void* classId;
	void 	(*init) (struct CLObject* ) ;
	void 	(*destruct) (struct CLObject* ) ;
	void 	(*retain) (struct CLObject* ) ;
	void 	(*release) (struct CLObject* ) ;
	void 	(*event) (struct CLObject*, int  , void *  , void *  ) ;
	void 	(*describe) (struct CLObject* ) ;
	
};
struct CLDataList
{
	struct CLDataList_Class* _class;
	void** _components;
	struct CLLink * head ; 
	struct CLLink * last ; 
	unsigned long length ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct CLDataList_Class
{
	char* className;
	void* classId;
	void 	(*init) (struct CLDataList* ) ;
	void 	(*destruct) (struct CLDataList* ) ;
	void 	(*add_data) (struct CLDataList*, void *  ) ;
	void 	(*add_data_at_index) (struct CLDataList*, void *  , unsigned long  ) ;
	void 	(*add_data_list) (struct CLDataList*, struct CLDataList *  ) ;
	char 	(*remove_data) (struct CLDataList*, void *  ) ;
	void * 	(*remove_data_at_index) (struct CLDataList*, unsigned long  ) ;
	void 	(*remove_all_data) (struct CLDataList* ) ;
	void * 	(*data_at_index) (struct CLDataList*, unsigned long  ) ;
	struct CLLink * 	(*link_at_index) (struct CLDataList*, unsigned long  ) ;
	char 	(*contains_data) (struct CLDataList*, void *  ) ;
	unsigned long 	(*index_of_data) (struct CLDataList*, void *  ) ;
	void * 	(*first_data) (struct CLDataList* ) ;
	void * 	(*last_data) (struct CLDataList* ) ;
	struct CLDataList * 	(*clone) (struct CLDataList* ) ;
	void 	(*describe) (struct CLDataList* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init_CLObject) (struct CLDataList* ) ;
	void 	(*destruct_CLObject) (struct CLDataList* ) ;
	void 	(*retain) (struct CLDataList* ) ;
	void 	(*release) (struct CLDataList* ) ;
	void 	(*event) (struct CLDataList*, int  , void *  , void *  ) ;
	void 	(*describe_CLObject) (struct CLDataList* ) ;
	
};
struct PRLifeRoom
{
	struct PRLifeRoom_Class* _class;
	void** _components;
	struct GLTextureSquare * table_texture ; 
	struct PRRoom_Class* _class_PRRoom;
	void** _components_PRRoom;
	int counter ; 
	int view_index ; 
	struct PRInfoView * my_info_view ; 
	struct CLDataList * info_views ; 
	struct CLDataList * removables ; 
	struct PRController * controller ; 
	struct PRRoom * next_room ; 
	struct PRRoom * last_room ; 
	struct GLUIElement_Class* _class_GLUIElement;
	void** _components_GLUIElement;
	char * name ; 
	char needs_redraw ; 
	char accepts_mouse ; 
	char accepts_focus ; 
	GLuint group ; 
	GLuint level ; 
	GLuint texture ; 
	MLVector3 origo ; 
	MLVector3 extent ; 
	MLVector3 combined_origo ; 
	MLMatrix4 * trafo ; 
	MLMatrix4 * combined_trafo ; 
	struct GLUIModel * model ; 
	struct GLUIModelDrawer * drawer ; 
	struct CLDataList * kids ; 
	struct GLUIElement * parent ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct PRLifeRoom_Class
{
	char* className;
	void* classId;
	void 	(*init_name_frame_controller) (struct PRLifeRoom*, char *  , MLVector4  , struct PRController *  ) ;
	void 	(*build) (struct PRLifeRoom* ) ;
	char* className_PRRoom;
	void* classId_PRRoom;
	void 	(*init_name_frame_controller_PRRoom) (struct PRLifeRoom*, char *  , MLVector4  , struct PRController *  ) ;
	void 	(*destruct) (struct PRLifeRoom* ) ;
	void 	(*create_info_view) (struct PRLifeRoom*, char *  , char *  , char *  , char *  , char *  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_empty_view) (struct PRLifeRoom*, MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_texture_area) (struct PRLifeRoom*, struct GLTextureSquare *  , float  , float  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_image_area) (struct PRLifeRoom*, char *  , float  , float  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*update) (struct PRLifeRoom* ) ;
	void 	(*step_right) (struct PRLifeRoom* ) ;
	void 	(*step_left) (struct PRLifeRoom* ) ;
	void 	(*build_PRRoom) (struct PRLifeRoom* ) ;
	void 	(*collapse) (struct PRLifeRoom* ) ;
	char* className_GLUIElement;
	void* classId_GLUIElement;
	void 	(*init_name_frame) (struct PRLifeRoom*, char *  , MLVector4  ) ;
	void 	(*destruct_GLUIElement) (struct PRLifeRoom* ) ;
	void 	(*set_level) (struct PRLifeRoom*, int  ) ;
	void 	(*set_group) (struct PRLifeRoom*, int  ) ;
	void 	(*set_texture) (struct PRLifeRoom*, GLuint  ) ;
	void 	(*set_texture_coords) (struct PRLifeRoom*, MLVector4  ) ;
	void 	(*set_color) (struct PRLifeRoom*, float  , float  , float  , float  ) ;
	void 	(*set_origo) (struct PRLifeRoom*, MLVector3  ) ;
	void 	(*set_extent) (struct PRLifeRoom*, MLVector3  ) ;
	void 	(*set_trafo) (struct PRLifeRoom*, MLMatrix4  , char  ) ;
	void 	(*update_GLUIElement) (struct PRLifeRoom* ) ;
	void 	(*update_frame) (struct PRLifeRoom* ) ;
	void 	(*update_trafo) (struct PRLifeRoom* ) ;
	void 	(*get_absolute_frame) (struct PRLifeRoom*, MLVector3 *  , MLVector3 *  , MLVector3 *  , MLVector3 *  ) ;
	void 	(*finalize_frame) (struct PRLifeRoom* ) ;
	void 	(*add_element) (struct PRLifeRoom*, struct GLUIElement *  ) ;
	void 	(*remove_element) (struct PRLifeRoom*, struct GLUIElement *  ) ;
	void 	(*attach) (struct PRLifeRoom*, struct GLUIModelDrawer *  ) ;
	void 	(*detach) (struct PRLifeRoom*, struct GLUIModelDrawer *  ) ;
	MLVector3 	(*get_relative_touch_line_a_line_b) (struct PRLifeRoom*, MLVector3  , MLVector3  ) ;
	void 	(*intersect_line_a_line_b_elements) (struct PRLifeRoom*, MLVector3  , MLVector3  , struct CLDataList *  ) ;
	void 	(*touch_began) (struct PRLifeRoom*, MLVector3  , MLVector3  ) ;
	void 	(*touch_moved) (struct PRLifeRoom*, MLVector3  , MLVector3  ) ;
	void 	(*touch_ended) (struct PRLifeRoom*, MLVector3  , MLVector3  ) ;
	void 	(*key_down_characters) (struct PRLifeRoom*, char *  ) ;
	void 	(*key_up_characters) (struct PRLifeRoom*, char *  ) ;
	void 	(*scroll_x_y) (struct PRLifeRoom*, float  , float  ) ;
	void 	(*focus_on) (struct PRLifeRoom* ) ;
	void 	(*focus_off) (struct PRLifeRoom* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct PRLifeRoom* ) ;
	void 	(*destruct_CLObject) (struct PRLifeRoom* ) ;
	void 	(*retain) (struct PRLifeRoom* ) ;
	void 	(*release) (struct PRLifeRoom* ) ;
	void 	(*event) (struct PRLifeRoom*, int  , void *  , void *  ) ;
	void 	(*describe) (struct PRLifeRoom* ) ;
	
};
struct PRSettings
{
	struct PRSettings_Class* _class;
	void** _components;
	struct CLString * font_path ; 
	struct CLString * resources_path ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct PRSettings_Class
{
	char* className;
	void* classId;
	void 	(*init_resources_path) (struct PRSettings*, char *  ) ;
	void 	(*destruct) (struct PRSettings* ) ;
	struct CLString * 	(*path_for_file) (struct PRSettings*, char *  ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct PRSettings* ) ;
	void 	(*destruct_CLObject) (struct PRSettings* ) ;
	void 	(*retain) (struct PRSettings* ) ;
	void 	(*release) (struct PRSettings* ) ;
	void 	(*event) (struct PRSettings*, int  , void *  , void *  ) ;
	void 	(*describe) (struct PRSettings* ) ;
	
};
struct PRMeasures
{
	struct PRMeasures_Class* _class;
	void** _components;
	float header_height ; 
	float button_size ; 
	float border ; 
	float header_font_size ; 
	float normal_font_size ; 
	float centered_width_small ; 
	float centered_width_large ; 
	float centered_width_medium ; 
	float vertical_center ; 
	float horizontal_center ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct PRMeasures_Class
{
	char* className;
	void* classId;
	void 	(*init_width_height) (struct PRMeasures*, float  , float  ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct PRMeasures* ) ;
	void 	(*destruct) (struct PRMeasures* ) ;
	void 	(*retain) (struct PRMeasures* ) ;
	void 	(*release) (struct PRMeasures* ) ;
	void 	(*event) (struct PRMeasures*, int  , void *  , void *  ) ;
	void 	(*describe) (struct PRMeasures* ) ;
	
};
struct PRInfoView
{
	struct PRInfoView_Class* _class;
	void** _components;
	struct GLUIElement * background ; 
	struct GLUIImageArea * picture ; 
	struct GLUIParagraph * title ; 
	struct GLUIParagraph * subtitle ; 
	struct GLUIParagraph * description ; 
	struct PRController * controller ; 
	struct GLUITrafoAnimator * animator ; 
	char hidden ; 
	char info_shown ; 
	char * small_path ; 
	char * large_path ; 
	struct GLUIElement_Class* _class_GLUIElement;
	void** _components_GLUIElement;
	char * name ; 
	char needs_redraw ; 
	char accepts_mouse ; 
	char accepts_focus ; 
	GLuint group ; 
	GLuint level ; 
	GLuint texture ; 
	MLVector3 origo ; 
	MLVector3 extent ; 
	MLVector3 combined_origo ; 
	MLMatrix4 * trafo ; 
	MLMatrix4 * combined_trafo ; 
	struct GLUIModel * model ; 
	struct GLUIModelDrawer * drawer ; 
	struct CLDataList * kids ; 
	struct GLUIElement * parent ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct PRInfoView_Class
{
	char* className;
	void* classId;
	void 	(*init_name_frame_controller) (struct PRInfoView*, char *  , MLVector4  , struct PRController *  ) ;
	void 	(*destruct) (struct PRInfoView* ) ;
	void 	(*set_title_label) (struct PRInfoView*, char *  ) ;
	void 	(*set_subtitle_label) (struct PRInfoView*, char *  ) ;
	void 	(*set_description_label) (struct PRInfoView*, char *  ) ;
	void 	(*show) (struct PRInfoView* ) ;
	void 	(*show_with_animation) (struct PRInfoView* ) ;
	void 	(*hide) (struct PRInfoView* ) ;
	void 	(*load_large) (struct PRInfoView* ) ;
	void 	(*set_image) (struct PRInfoView*, char *  ) ;
	void 	(*update) (struct PRInfoView* ) ;
	void 	(*event) (struct PRInfoView*, int  , void *  , void *  ) ;
	char* className_GLUIElement;
	void* classId_GLUIElement;
	void 	(*init_name_frame) (struct PRInfoView*, char *  , MLVector4  ) ;
	void 	(*destruct_GLUIElement) (struct PRInfoView* ) ;
	void 	(*set_level) (struct PRInfoView*, int  ) ;
	void 	(*set_group) (struct PRInfoView*, int  ) ;
	void 	(*set_texture) (struct PRInfoView*, GLuint  ) ;
	void 	(*set_texture_coords) (struct PRInfoView*, MLVector4  ) ;
	void 	(*set_color) (struct PRInfoView*, float  , float  , float  , float  ) ;
	void 	(*set_origo) (struct PRInfoView*, MLVector3  ) ;
	void 	(*set_extent) (struct PRInfoView*, MLVector3  ) ;
	void 	(*set_trafo) (struct PRInfoView*, MLMatrix4  , char  ) ;
	void 	(*update_GLUIElement) (struct PRInfoView* ) ;
	void 	(*update_frame) (struct PRInfoView* ) ;
	void 	(*update_trafo) (struct PRInfoView* ) ;
	void 	(*get_absolute_frame) (struct PRInfoView*, MLVector3 *  , MLVector3 *  , MLVector3 *  , MLVector3 *  ) ;
	void 	(*finalize_frame) (struct PRInfoView* ) ;
	void 	(*add_element) (struct PRInfoView*, struct GLUIElement *  ) ;
	void 	(*remove_element) (struct PRInfoView*, struct GLUIElement *  ) ;
	void 	(*attach) (struct PRInfoView*, struct GLUIModelDrawer *  ) ;
	void 	(*detach) (struct PRInfoView*, struct GLUIModelDrawer *  ) ;
	MLVector3 	(*get_relative_touch_line_a_line_b) (struct PRInfoView*, MLVector3  , MLVector3  ) ;
	void 	(*intersect_line_a_line_b_elements) (struct PRInfoView*, MLVector3  , MLVector3  , struct CLDataList *  ) ;
	void 	(*touch_began) (struct PRInfoView*, MLVector3  , MLVector3  ) ;
	void 	(*touch_moved) (struct PRInfoView*, MLVector3  , MLVector3  ) ;
	void 	(*touch_ended) (struct PRInfoView*, MLVector3  , MLVector3  ) ;
	void 	(*key_down_characters) (struct PRInfoView*, char *  ) ;
	void 	(*key_up_characters) (struct PRInfoView*, char *  ) ;
	void 	(*scroll_x_y) (struct PRInfoView*, float  , float  ) ;
	void 	(*focus_on) (struct PRInfoView* ) ;
	void 	(*focus_off) (struct PRInfoView* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct PRInfoView* ) ;
	void 	(*destruct_CLObject) (struct PRInfoView* ) ;
	void 	(*retain) (struct PRInfoView* ) ;
	void 	(*release) (struct PRInfoView* ) ;
	void 	(*event_CLObject) (struct PRInfoView*, int  , void *  , void *  ) ;
	void 	(*describe) (struct PRInfoView* ) ;
	
};
struct PRFontManager
{
	struct PRFontManager_Class* _class;
	void** _components;
	struct CLDataList * fonts ; 
	struct PRSettings * settings ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct PRFontManager_Class
{
	char* className;
	void* classId;
	void 	(*init_settings) (struct PRFontManager*, struct PRSettings *  ) ;
	void 	(*destruct) (struct PRFontManager* ) ;
	struct GLFontTrueType * 	(*font_for_name_size_r_g_b) (struct PRFontManager*, char *  , float  , int  , int  , int  ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct PRFontManager* ) ;
	void 	(*destruct_CLObject) (struct PRFontManager* ) ;
	void 	(*retain) (struct PRFontManager* ) ;
	void 	(*release) (struct PRFontManager* ) ;
	void 	(*event) (struct PRFontManager*, int  , void *  , void *  ) ;
	void 	(*describe) (struct PRFontManager* ) ;
	
};
struct GLUIImageArea
{
	struct GLUIImageArea_Class* _class;
	void** _components;
	struct GLBitmapRGBA * bitmap ; 
	struct GLTextureSquare * texturei ; 
	struct GLUIElement_Class* _class_GLUIElement;
	void** _components_GLUIElement;
	char * name ; 
	char needs_redraw ; 
	char accepts_mouse ; 
	char accepts_focus ; 
	GLuint group ; 
	GLuint level ; 
	GLuint texture ; 
	MLVector3 origo ; 
	MLVector3 extent ; 
	MLVector3 combined_origo ; 
	MLMatrix4 * trafo ; 
	MLMatrix4 * combined_trafo ; 
	struct GLUIModel * model ; 
	struct GLUIModelDrawer * drawer ; 
	struct CLDataList * kids ; 
	struct GLUIElement * parent ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUIImageArea_Class
{
	char* className;
	void* classId;
	void 	(*init_name_frame_path) (struct GLUIImageArea*, char *  , MLVector4  , char *  ) ;
	void 	(*destruct) (struct GLUIImageArea* ) ;
	char* className_GLUIElement;
	void* classId_GLUIElement;
	void 	(*init_name_frame) (struct GLUIImageArea*, char *  , MLVector4  ) ;
	void 	(*destruct_GLUIElement) (struct GLUIImageArea* ) ;
	void 	(*set_level) (struct GLUIImageArea*, int  ) ;
	void 	(*set_group) (struct GLUIImageArea*, int  ) ;
	void 	(*set_texture) (struct GLUIImageArea*, GLuint  ) ;
	void 	(*set_texture_coords) (struct GLUIImageArea*, MLVector4  ) ;
	void 	(*set_color) (struct GLUIImageArea*, float  , float  , float  , float  ) ;
	void 	(*set_origo) (struct GLUIImageArea*, MLVector3  ) ;
	void 	(*set_extent) (struct GLUIImageArea*, MLVector3  ) ;
	void 	(*set_trafo) (struct GLUIImageArea*, MLMatrix4  , char  ) ;
	void 	(*update) (struct GLUIImageArea* ) ;
	void 	(*update_frame) (struct GLUIImageArea* ) ;
	void 	(*update_trafo) (struct GLUIImageArea* ) ;
	void 	(*get_absolute_frame) (struct GLUIImageArea*, MLVector3 *  , MLVector3 *  , MLVector3 *  , MLVector3 *  ) ;
	void 	(*finalize_frame) (struct GLUIImageArea* ) ;
	void 	(*add_element) (struct GLUIImageArea*, struct GLUIElement *  ) ;
	void 	(*remove_element) (struct GLUIImageArea*, struct GLUIElement *  ) ;
	void 	(*attach) (struct GLUIImageArea*, struct GLUIModelDrawer *  ) ;
	void 	(*detach) (struct GLUIImageArea*, struct GLUIModelDrawer *  ) ;
	MLVector3 	(*get_relative_touch_line_a_line_b) (struct GLUIImageArea*, MLVector3  , MLVector3  ) ;
	void 	(*intersect_line_a_line_b_elements) (struct GLUIImageArea*, MLVector3  , MLVector3  , struct CLDataList *  ) ;
	void 	(*touch_began) (struct GLUIImageArea*, MLVector3  , MLVector3  ) ;
	void 	(*touch_moved) (struct GLUIImageArea*, MLVector3  , MLVector3  ) ;
	void 	(*touch_ended) (struct GLUIImageArea*, MLVector3  , MLVector3  ) ;
	void 	(*key_down_characters) (struct GLUIImageArea*, char *  ) ;
	void 	(*key_up_characters) (struct GLUIImageArea*, char *  ) ;
	void 	(*scroll_x_y) (struct GLUIImageArea*, float  , float  ) ;
	void 	(*focus_on) (struct GLUIImageArea* ) ;
	void 	(*focus_off) (struct GLUIImageArea* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLUIImageArea* ) ;
	void 	(*destruct_CLObject) (struct GLUIImageArea* ) ;
	void 	(*retain) (struct GLUIImageArea* ) ;
	void 	(*release) (struct GLUIImageArea* ) ;
	void 	(*event) (struct GLUIImageArea*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLUIImageArea* ) ;
	
};
struct GLUIElement
{
	struct GLUIElement_Class* _class;
	void** _components;
	char * name ; 
	char needs_redraw ; 
	char accepts_mouse ; 
	char accepts_focus ; 
	GLuint group ; 
	GLuint level ; 
	GLuint texture ; 
	MLVector3 origo ; 
	MLVector3 extent ; 
	MLVector3 combined_origo ; 
	MLMatrix4 * trafo ; 
	MLMatrix4 * combined_trafo ; 
	struct GLUIModel * model ; 
	struct GLUIModelDrawer * drawer ; 
	struct CLDataList * kids ; 
	struct GLUIElement * parent ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUIElement_Class
{
	char* className;
	void* classId;
	void 	(*init_name_frame) (struct GLUIElement*, char *  , MLVector4  ) ;
	void 	(*destruct) (struct GLUIElement* ) ;
	void 	(*set_level) (struct GLUIElement*, int  ) ;
	void 	(*set_group) (struct GLUIElement*, int  ) ;
	void 	(*set_texture) (struct GLUIElement*, GLuint  ) ;
	void 	(*set_texture_coords) (struct GLUIElement*, MLVector4  ) ;
	void 	(*set_color) (struct GLUIElement*, float  , float  , float  , float  ) ;
	void 	(*set_origo) (struct GLUIElement*, MLVector3  ) ;
	void 	(*set_extent) (struct GLUIElement*, MLVector3  ) ;
	void 	(*set_trafo) (struct GLUIElement*, MLMatrix4  , char  ) ;
	void 	(*update) (struct GLUIElement* ) ;
	void 	(*update_frame) (struct GLUIElement* ) ;
	void 	(*update_trafo) (struct GLUIElement* ) ;
	void 	(*get_absolute_frame) (struct GLUIElement*, MLVector3 *  , MLVector3 *  , MLVector3 *  , MLVector3 *  ) ;
	void 	(*finalize_frame) (struct GLUIElement* ) ;
	void 	(*add_element) (struct GLUIElement*, struct GLUIElement *  ) ;
	void 	(*remove_element) (struct GLUIElement*, struct GLUIElement *  ) ;
	void 	(*attach) (struct GLUIElement*, struct GLUIModelDrawer *  ) ;
	void 	(*detach) (struct GLUIElement*, struct GLUIModelDrawer *  ) ;
	MLVector3 	(*get_relative_touch_line_a_line_b) (struct GLUIElement*, MLVector3  , MLVector3  ) ;
	void 	(*intersect_line_a_line_b_elements) (struct GLUIElement*, MLVector3  , MLVector3  , struct CLDataList *  ) ;
	void 	(*touch_began) (struct GLUIElement*, MLVector3  , MLVector3  ) ;
	void 	(*touch_moved) (struct GLUIElement*, MLVector3  , MLVector3  ) ;
	void 	(*touch_ended) (struct GLUIElement*, MLVector3  , MLVector3  ) ;
	void 	(*key_down_characters) (struct GLUIElement*, char *  ) ;
	void 	(*key_up_characters) (struct GLUIElement*, char *  ) ;
	void 	(*scroll_x_y) (struct GLUIElement*, float  , float  ) ;
	void 	(*focus_on) (struct GLUIElement* ) ;
	void 	(*focus_off) (struct GLUIElement* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLUIElement* ) ;
	void 	(*destruct_CLObject) (struct GLUIElement* ) ;
	void 	(*retain) (struct GLUIElement* ) ;
	void 	(*release) (struct GLUIElement* ) ;
	void 	(*event) (struct GLUIElement*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLUIElement* ) ;
	
};
struct GLUIController
{
	struct GLUIController_Class* _class;
	void** _components;
	char needs_redraw ; 
	char mouse_is_down ; 
	GLuint projection_ul ; 
	float fov_x ; 
	float fov_y ; 
	float eye_z ; 
	float width ; 
	float height ; 
	struct GLUIElement * touched ; 
	struct GLUIElement * focused ; 
	struct GLUIShader * shader ; 
	struct GLUIElement * base ; 
	struct GLUIModelDrawer * drawer ; 
	struct GLUITrafo * view_trafo ; 
	struct GLUITrafoAnimator * view_animator ; 
	MLMatrix4 view_matrix ; 
	MLMatrix4 projection_matrix ; 
	MLMatrix4 perspective_matrix ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUIController_Class
{
	char* className;
	void* classId;
	void 	(*init_fov_width_height_nead_far) (struct GLUIController*, float  , float  , float  , float  , float  ) ;
	void 	(*destruct) (struct GLUIController* ) ;
	void 	(*update) (struct GLUIController* ) ;
	void 	(*render) (struct GLUIController* ) ;
	void 	(*zoom_to_element) (struct GLUIController*, struct GLUIElement *  , int  , char  ) ;
	void 	(*zoom_to_ui_trafo) (struct GLUIController*, struct GLUITrafo *  , int  , char  ) ;
	void 	(*set_view_ui_trafo) (struct GLUIController*, struct GLUITrafo *  ) ;
	void 	(*set_view_trafo) (struct GLUIController*, MLMatrix4  ) ;
	void 	(*add_element) (struct GLUIController*, struct GLUIElement *  ) ;
	void 	(*remove_element) (struct GLUIController*, struct GLUIElement *  ) ;
	void 	(*set_focus) (struct GLUIController*, struct GLUIElement *  ) ;
	struct CLDataList * 	(*intersected_elements_at_x_y) (struct GLUIController*, float  , float  , MLVector3 *  , MLVector3 *  ) ;
	void 	(*mouse_down_at_x_y) (struct GLUIController*, float  , float  ) ;
	void 	(*mouse_up_at_x_y) (struct GLUIController*, float  , float  ) ;
	void 	(*mouse_move_at_x_y) (struct GLUIController*, float  , float  ) ;
	void 	(*key_down_characters) (struct GLUIController*, char *  ) ;
	void 	(*scroll_x_y) (struct GLUIController*, float  , float  ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLUIController* ) ;
	void 	(*destruct_CLObject) (struct GLUIController* ) ;
	void 	(*retain) (struct GLUIController* ) ;
	void 	(*release) (struct GLUIController* ) ;
	void 	(*event) (struct GLUIController*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLUIController* ) ;
	
};
struct GLUITrafo
{
	struct GLUITrafo_Class* _class;
	void** _components;
	MLVector3 scale ; 
	MLVector3 rotation ; 
	MLVector3 translation ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUITrafo_Class
{
	char* className;
	void* classId;
	void 	(*init) (struct GLUITrafo* ) ;
	MLMatrix4 	(*matrix) (struct GLUITrafo* ) ;
	void 	(*describe) (struct GLUITrafo* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init_CLObject) (struct GLUITrafo* ) ;
	void 	(*destruct) (struct GLUITrafo* ) ;
	void 	(*retain) (struct GLUITrafo* ) ;
	void 	(*release) (struct GLUITrafo* ) ;
	void 	(*event) (struct GLUITrafo*, int  , void *  , void *  ) ;
	void 	(*describe_CLObject) (struct GLUITrafo* ) ;
	
};
struct PRCodingRoom
{
	struct PRCodingRoom_Class* _class;
	void** _components;
	struct PRRoom_Class* _class_PRRoom;
	void** _components_PRRoom;
	int counter ; 
	int view_index ; 
	struct PRInfoView * my_info_view ; 
	struct CLDataList * info_views ; 
	struct CLDataList * removables ; 
	struct PRController * controller ; 
	struct PRRoom * next_room ; 
	struct PRRoom * last_room ; 
	struct GLUIElement_Class* _class_GLUIElement;
	void** _components_GLUIElement;
	char * name ; 
	char needs_redraw ; 
	char accepts_mouse ; 
	char accepts_focus ; 
	GLuint group ; 
	GLuint level ; 
	GLuint texture ; 
	MLVector3 origo ; 
	MLVector3 extent ; 
	MLVector3 combined_origo ; 
	MLMatrix4 * trafo ; 
	MLMatrix4 * combined_trafo ; 
	struct GLUIModel * model ; 
	struct GLUIModelDrawer * drawer ; 
	struct CLDataList * kids ; 
	struct GLUIElement * parent ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct PRCodingRoom_Class
{
	char* className;
	void* classId;
	void 	(*init_name_frame_controller) (struct PRCodingRoom*, char *  , MLVector4  , struct PRController *  ) ;
	void 	(*build) (struct PRCodingRoom* ) ;
	char* className_PRRoom;
	void* classId_PRRoom;
	void 	(*init_name_frame_controller_PRRoom) (struct PRCodingRoom*, char *  , MLVector4  , struct PRController *  ) ;
	void 	(*destruct) (struct PRCodingRoom* ) ;
	void 	(*create_info_view) (struct PRCodingRoom*, char *  , char *  , char *  , char *  , char *  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_empty_view) (struct PRCodingRoom*, MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_texture_area) (struct PRCodingRoom*, struct GLTextureSquare *  , float  , float  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_image_area) (struct PRCodingRoom*, char *  , float  , float  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*update) (struct PRCodingRoom* ) ;
	void 	(*step_right) (struct PRCodingRoom* ) ;
	void 	(*step_left) (struct PRCodingRoom* ) ;
	void 	(*build_PRRoom) (struct PRCodingRoom* ) ;
	void 	(*collapse) (struct PRCodingRoom* ) ;
	char* className_GLUIElement;
	void* classId_GLUIElement;
	void 	(*init_name_frame) (struct PRCodingRoom*, char *  , MLVector4  ) ;
	void 	(*destruct_GLUIElement) (struct PRCodingRoom* ) ;
	void 	(*set_level) (struct PRCodingRoom*, int  ) ;
	void 	(*set_group) (struct PRCodingRoom*, int  ) ;
	void 	(*set_texture) (struct PRCodingRoom*, GLuint  ) ;
	void 	(*set_texture_coords) (struct PRCodingRoom*, MLVector4  ) ;
	void 	(*set_color) (struct PRCodingRoom*, float  , float  , float  , float  ) ;
	void 	(*set_origo) (struct PRCodingRoom*, MLVector3  ) ;
	void 	(*set_extent) (struct PRCodingRoom*, MLVector3  ) ;
	void 	(*set_trafo) (struct PRCodingRoom*, MLMatrix4  , char  ) ;
	void 	(*update_GLUIElement) (struct PRCodingRoom* ) ;
	void 	(*update_frame) (struct PRCodingRoom* ) ;
	void 	(*update_trafo) (struct PRCodingRoom* ) ;
	void 	(*get_absolute_frame) (struct PRCodingRoom*, MLVector3 *  , MLVector3 *  , MLVector3 *  , MLVector3 *  ) ;
	void 	(*finalize_frame) (struct PRCodingRoom* ) ;
	void 	(*add_element) (struct PRCodingRoom*, struct GLUIElement *  ) ;
	void 	(*remove_element) (struct PRCodingRoom*, struct GLUIElement *  ) ;
	void 	(*attach) (struct PRCodingRoom*, struct GLUIModelDrawer *  ) ;
	void 	(*detach) (struct PRCodingRoom*, struct GLUIModelDrawer *  ) ;
	MLVector3 	(*get_relative_touch_line_a_line_b) (struct PRCodingRoom*, MLVector3  , MLVector3  ) ;
	void 	(*intersect_line_a_line_b_elements) (struct PRCodingRoom*, MLVector3  , MLVector3  , struct CLDataList *  ) ;
	void 	(*touch_began) (struct PRCodingRoom*, MLVector3  , MLVector3  ) ;
	void 	(*touch_moved) (struct PRCodingRoom*, MLVector3  , MLVector3  ) ;
	void 	(*touch_ended) (struct PRCodingRoom*, MLVector3  , MLVector3  ) ;
	void 	(*key_down_characters) (struct PRCodingRoom*, char *  ) ;
	void 	(*key_up_characters) (struct PRCodingRoom*, char *  ) ;
	void 	(*scroll_x_y) (struct PRCodingRoom*, float  , float  ) ;
	void 	(*focus_on) (struct PRCodingRoom* ) ;
	void 	(*focus_off) (struct PRCodingRoom* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct PRCodingRoom* ) ;
	void 	(*destruct_CLObject) (struct PRCodingRoom* ) ;
	void 	(*retain) (struct PRCodingRoom* ) ;
	void 	(*release) (struct PRCodingRoom* ) ;
	void 	(*event) (struct PRCodingRoom*, int  , void *  , void *  ) ;
	void 	(*describe) (struct PRCodingRoom* ) ;
	
};
struct PRDesignRoom
{
	struct PRDesignRoom_Class* _class;
	void** _components;
	struct PRRoom_Class* _class_PRRoom;
	void** _components_PRRoom;
	int counter ; 
	int view_index ; 
	struct PRInfoView * my_info_view ; 
	struct CLDataList * info_views ; 
	struct CLDataList * removables ; 
	struct PRController * controller ; 
	struct PRRoom * next_room ; 
	struct PRRoom * last_room ; 
	struct GLUIElement_Class* _class_GLUIElement;
	void** _components_GLUIElement;
	char * name ; 
	char needs_redraw ; 
	char accepts_mouse ; 
	char accepts_focus ; 
	GLuint group ; 
	GLuint level ; 
	GLuint texture ; 
	MLVector3 origo ; 
	MLVector3 extent ; 
	MLVector3 combined_origo ; 
	MLMatrix4 * trafo ; 
	MLMatrix4 * combined_trafo ; 
	struct GLUIModel * model ; 
	struct GLUIModelDrawer * drawer ; 
	struct CLDataList * kids ; 
	struct GLUIElement * parent ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct PRDesignRoom_Class
{
	char* className;
	void* classId;
	void 	(*init_name_frame_controller) (struct PRDesignRoom*, char *  , MLVector4  , struct PRController *  ) ;
	void 	(*build) (struct PRDesignRoom* ) ;
	char* className_PRRoom;
	void* classId_PRRoom;
	void 	(*init_name_frame_controller_PRRoom) (struct PRDesignRoom*, char *  , MLVector4  , struct PRController *  ) ;
	void 	(*destruct) (struct PRDesignRoom* ) ;
	void 	(*create_info_view) (struct PRDesignRoom*, char *  , char *  , char *  , char *  , char *  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_empty_view) (struct PRDesignRoom*, MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_texture_area) (struct PRDesignRoom*, struct GLTextureSquare *  , float  , float  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_image_area) (struct PRDesignRoom*, char *  , float  , float  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*update) (struct PRDesignRoom* ) ;
	void 	(*step_right) (struct PRDesignRoom* ) ;
	void 	(*step_left) (struct PRDesignRoom* ) ;
	void 	(*build_PRRoom) (struct PRDesignRoom* ) ;
	void 	(*collapse) (struct PRDesignRoom* ) ;
	char* className_GLUIElement;
	void* classId_GLUIElement;
	void 	(*init_name_frame) (struct PRDesignRoom*, char *  , MLVector4  ) ;
	void 	(*destruct_GLUIElement) (struct PRDesignRoom* ) ;
	void 	(*set_level) (struct PRDesignRoom*, int  ) ;
	void 	(*set_group) (struct PRDesignRoom*, int  ) ;
	void 	(*set_texture) (struct PRDesignRoom*, GLuint  ) ;
	void 	(*set_texture_coords) (struct PRDesignRoom*, MLVector4  ) ;
	void 	(*set_color) (struct PRDesignRoom*, float  , float  , float  , float  ) ;
	void 	(*set_origo) (struct PRDesignRoom*, MLVector3  ) ;
	void 	(*set_extent) (struct PRDesignRoom*, MLVector3  ) ;
	void 	(*set_trafo) (struct PRDesignRoom*, MLMatrix4  , char  ) ;
	void 	(*update_GLUIElement) (struct PRDesignRoom* ) ;
	void 	(*update_frame) (struct PRDesignRoom* ) ;
	void 	(*update_trafo) (struct PRDesignRoom* ) ;
	void 	(*get_absolute_frame) (struct PRDesignRoom*, MLVector3 *  , MLVector3 *  , MLVector3 *  , MLVector3 *  ) ;
	void 	(*finalize_frame) (struct PRDesignRoom* ) ;
	void 	(*add_element) (struct PRDesignRoom*, struct GLUIElement *  ) ;
	void 	(*remove_element) (struct PRDesignRoom*, struct GLUIElement *  ) ;
	void 	(*attach) (struct PRDesignRoom*, struct GLUIModelDrawer *  ) ;
	void 	(*detach) (struct PRDesignRoom*, struct GLUIModelDrawer *  ) ;
	MLVector3 	(*get_relative_touch_line_a_line_b) (struct PRDesignRoom*, MLVector3  , MLVector3  ) ;
	void 	(*intersect_line_a_line_b_elements) (struct PRDesignRoom*, MLVector3  , MLVector3  , struct CLDataList *  ) ;
	void 	(*touch_began) (struct PRDesignRoom*, MLVector3  , MLVector3  ) ;
	void 	(*touch_moved) (struct PRDesignRoom*, MLVector3  , MLVector3  ) ;
	void 	(*touch_ended) (struct PRDesignRoom*, MLVector3  , MLVector3  ) ;
	void 	(*key_down_characters) (struct PRDesignRoom*, char *  ) ;
	void 	(*key_up_characters) (struct PRDesignRoom*, char *  ) ;
	void 	(*scroll_x_y) (struct PRDesignRoom*, float  , float  ) ;
	void 	(*focus_on) (struct PRDesignRoom* ) ;
	void 	(*focus_off) (struct PRDesignRoom* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct PRDesignRoom* ) ;
	void 	(*destruct_CLObject) (struct PRDesignRoom* ) ;
	void 	(*retain) (struct PRDesignRoom* ) ;
	void 	(*release) (struct PRDesignRoom* ) ;
	void 	(*event) (struct PRDesignRoom*, int  , void *  , void *  ) ;
	void 	(*describe) (struct PRDesignRoom* ) ;
	
};
struct PRMusicRoom
{
	struct PRMusicRoom_Class* _class;
	void** _components;
	struct PRRoom_Class* _class_PRRoom;
	void** _components_PRRoom;
	int counter ; 
	int view_index ; 
	struct PRInfoView * my_info_view ; 
	struct CLDataList * info_views ; 
	struct CLDataList * removables ; 
	struct PRController * controller ; 
	struct PRRoom * next_room ; 
	struct PRRoom * last_room ; 
	struct GLUIElement_Class* _class_GLUIElement;
	void** _components_GLUIElement;
	char * name ; 
	char needs_redraw ; 
	char accepts_mouse ; 
	char accepts_focus ; 
	GLuint group ; 
	GLuint level ; 
	GLuint texture ; 
	MLVector3 origo ; 
	MLVector3 extent ; 
	MLVector3 combined_origo ; 
	MLMatrix4 * trafo ; 
	MLMatrix4 * combined_trafo ; 
	struct GLUIModel * model ; 
	struct GLUIModelDrawer * drawer ; 
	struct CLDataList * kids ; 
	struct GLUIElement * parent ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct PRMusicRoom_Class
{
	char* className;
	void* classId;
	void 	(*init_name_frame_controller) (struct PRMusicRoom*, char *  , MLVector4  , struct PRController *  ) ;
	void 	(*build) (struct PRMusicRoom* ) ;
	char* className_PRRoom;
	void* classId_PRRoom;
	void 	(*init_name_frame_controller_PRRoom) (struct PRMusicRoom*, char *  , MLVector4  , struct PRController *  ) ;
	void 	(*destruct) (struct PRMusicRoom* ) ;
	void 	(*create_info_view) (struct PRMusicRoom*, char *  , char *  , char *  , char *  , char *  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_empty_view) (struct PRMusicRoom*, MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_texture_area) (struct PRMusicRoom*, struct GLTextureSquare *  , float  , float  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_image_area) (struct PRMusicRoom*, char *  , float  , float  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*update) (struct PRMusicRoom* ) ;
	void 	(*step_right) (struct PRMusicRoom* ) ;
	void 	(*step_left) (struct PRMusicRoom* ) ;
	void 	(*build_PRRoom) (struct PRMusicRoom* ) ;
	void 	(*collapse) (struct PRMusicRoom* ) ;
	char* className_GLUIElement;
	void* classId_GLUIElement;
	void 	(*init_name_frame) (struct PRMusicRoom*, char *  , MLVector4  ) ;
	void 	(*destruct_GLUIElement) (struct PRMusicRoom* ) ;
	void 	(*set_level) (struct PRMusicRoom*, int  ) ;
	void 	(*set_group) (struct PRMusicRoom*, int  ) ;
	void 	(*set_texture) (struct PRMusicRoom*, GLuint  ) ;
	void 	(*set_texture_coords) (struct PRMusicRoom*, MLVector4  ) ;
	void 	(*set_color) (struct PRMusicRoom*, float  , float  , float  , float  ) ;
	void 	(*set_origo) (struct PRMusicRoom*, MLVector3  ) ;
	void 	(*set_extent) (struct PRMusicRoom*, MLVector3  ) ;
	void 	(*set_trafo) (struct PRMusicRoom*, MLMatrix4  , char  ) ;
	void 	(*update_GLUIElement) (struct PRMusicRoom* ) ;
	void 	(*update_frame) (struct PRMusicRoom* ) ;
	void 	(*update_trafo) (struct PRMusicRoom* ) ;
	void 	(*get_absolute_frame) (struct PRMusicRoom*, MLVector3 *  , MLVector3 *  , MLVector3 *  , MLVector3 *  ) ;
	void 	(*finalize_frame) (struct PRMusicRoom* ) ;
	void 	(*add_element) (struct PRMusicRoom*, struct GLUIElement *  ) ;
	void 	(*remove_element) (struct PRMusicRoom*, struct GLUIElement *  ) ;
	void 	(*attach) (struct PRMusicRoom*, struct GLUIModelDrawer *  ) ;
	void 	(*detach) (struct PRMusicRoom*, struct GLUIModelDrawer *  ) ;
	MLVector3 	(*get_relative_touch_line_a_line_b) (struct PRMusicRoom*, MLVector3  , MLVector3  ) ;
	void 	(*intersect_line_a_line_b_elements) (struct PRMusicRoom*, MLVector3  , MLVector3  , struct CLDataList *  ) ;
	void 	(*touch_began) (struct PRMusicRoom*, MLVector3  , MLVector3  ) ;
	void 	(*touch_moved) (struct PRMusicRoom*, MLVector3  , MLVector3  ) ;
	void 	(*touch_ended) (struct PRMusicRoom*, MLVector3  , MLVector3  ) ;
	void 	(*key_down_characters) (struct PRMusicRoom*, char *  ) ;
	void 	(*key_up_characters) (struct PRMusicRoom*, char *  ) ;
	void 	(*scroll_x_y) (struct PRMusicRoom*, float  , float  ) ;
	void 	(*focus_on) (struct PRMusicRoom* ) ;
	void 	(*focus_off) (struct PRMusicRoom* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct PRMusicRoom* ) ;
	void 	(*destruct_CLObject) (struct PRMusicRoom* ) ;
	void 	(*retain) (struct PRMusicRoom* ) ;
	void 	(*release) (struct PRMusicRoom* ) ;
	void 	(*event) (struct PRMusicRoom*, int  , void *  , void *  ) ;
	void 	(*describe) (struct PRMusicRoom* ) ;
	
};
struct PRRoom
{
	struct PRRoom_Class* _class;
	void** _components;
	int counter ; 
	int view_index ; 
	struct PRInfoView * my_info_view ; 
	struct CLDataList * info_views ; 
	struct CLDataList * removables ; 
	struct PRController * controller ; 
	struct PRRoom * next_room ; 
	struct PRRoom * last_room ; 
	struct GLUIElement_Class* _class_GLUIElement;
	void** _components_GLUIElement;
	char * name ; 
	char needs_redraw ; 
	char accepts_mouse ; 
	char accepts_focus ; 
	GLuint group ; 
	GLuint level ; 
	GLuint texture ; 
	MLVector3 origo ; 
	MLVector3 extent ; 
	MLVector3 combined_origo ; 
	MLMatrix4 * trafo ; 
	MLMatrix4 * combined_trafo ; 
	struct GLUIModel * model ; 
	struct GLUIModelDrawer * drawer ; 
	struct CLDataList * kids ; 
	struct GLUIElement * parent ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct PRRoom_Class
{
	char* className;
	void* classId;
	void 	(*init_name_frame_controller) (struct PRRoom*, char *  , MLVector4  , struct PRController *  ) ;
	void 	(*destruct) (struct PRRoom* ) ;
	void 	(*create_info_view) (struct PRRoom*, char *  , char *  , char *  , char *  , char *  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_empty_view) (struct PRRoom*, MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_texture_area) (struct PRRoom*, struct GLTextureSquare *  , float  , float  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*create_image_area) (struct PRRoom*, char *  , float  , float  , MLVector3  , MLVector3  , MLVector3  ) ;
	void 	(*update) (struct PRRoom* ) ;
	void 	(*step_right) (struct PRRoom* ) ;
	void 	(*step_left) (struct PRRoom* ) ;
	void 	(*build) (struct PRRoom* ) ;
	void 	(*collapse) (struct PRRoom* ) ;
	char* className_GLUIElement;
	void* classId_GLUIElement;
	void 	(*init_name_frame) (struct PRRoom*, char *  , MLVector4  ) ;
	void 	(*destruct_GLUIElement) (struct PRRoom* ) ;
	void 	(*set_level) (struct PRRoom*, int  ) ;
	void 	(*set_group) (struct PRRoom*, int  ) ;
	void 	(*set_texture) (struct PRRoom*, GLuint  ) ;
	void 	(*set_texture_coords) (struct PRRoom*, MLVector4  ) ;
	void 	(*set_color) (struct PRRoom*, float  , float  , float  , float  ) ;
	void 	(*set_origo) (struct PRRoom*, MLVector3  ) ;
	void 	(*set_extent) (struct PRRoom*, MLVector3  ) ;
	void 	(*set_trafo) (struct PRRoom*, MLMatrix4  , char  ) ;
	void 	(*update_GLUIElement) (struct PRRoom* ) ;
	void 	(*update_frame) (struct PRRoom* ) ;
	void 	(*update_trafo) (struct PRRoom* ) ;
	void 	(*get_absolute_frame) (struct PRRoom*, MLVector3 *  , MLVector3 *  , MLVector3 *  , MLVector3 *  ) ;
	void 	(*finalize_frame) (struct PRRoom* ) ;
	void 	(*add_element) (struct PRRoom*, struct GLUIElement *  ) ;
	void 	(*remove_element) (struct PRRoom*, struct GLUIElement *  ) ;
	void 	(*attach) (struct PRRoom*, struct GLUIModelDrawer *  ) ;
	void 	(*detach) (struct PRRoom*, struct GLUIModelDrawer *  ) ;
	MLVector3 	(*get_relative_touch_line_a_line_b) (struct PRRoom*, MLVector3  , MLVector3  ) ;
	void 	(*intersect_line_a_line_b_elements) (struct PRRoom*, MLVector3  , MLVector3  , struct CLDataList *  ) ;
	void 	(*touch_began) (struct PRRoom*, MLVector3  , MLVector3  ) ;
	void 	(*touch_moved) (struct PRRoom*, MLVector3  , MLVector3  ) ;
	void 	(*touch_ended) (struct PRRoom*, MLVector3  , MLVector3  ) ;
	void 	(*key_down_characters) (struct PRRoom*, char *  ) ;
	void 	(*key_up_characters) (struct PRRoom*, char *  ) ;
	void 	(*scroll_x_y) (struct PRRoom*, float  , float  ) ;
	void 	(*focus_on) (struct PRRoom* ) ;
	void 	(*focus_off) (struct PRRoom* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct PRRoom* ) ;
	void 	(*destruct_CLObject) (struct PRRoom* ) ;
	void 	(*retain) (struct PRRoom* ) ;
	void 	(*release) (struct PRRoom* ) ;
	void 	(*event) (struct PRRoom*, int  , void *  , void *  ) ;
	void 	(*describe) (struct PRRoom* ) ;
	
};
struct GLBitmapRGBA
{
	struct GLBitmapRGBA_Class* _class;
	void** _components;
	int width ; 
	int height ; 
	int length ; 
	unsigned char * data ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLBitmapRGBA_Class
{
	char* className;
	void* classId;
	void 	(*init_width_height) (struct GLBitmapRGBA*, int  , int  ) ;
	void 	(*destruct) (struct GLBitmapRGBA* ) ;
	void 	(*fill_sx_sy_ex_ey_r_g_b_a) (struct GLBitmapRGBA*, int  , int  , int  , int  , float  , float  , float  , float  ) ;
	void 	(*gradient_sx_sy_ex_ey_r_g_b_a_r_g_b_a) (struct GLBitmapRGBA*, int  , int  , int  , int  , float  , float  , float  , float  , float  , float  , float  , float  ) ;
	void 	(*set_x_y_r_g_b_a) (struct GLBitmapRGBA*, int  , int  , int  , int  , int  , int  ) ;
	void 	(*get_x_y_r_g_b_a) (struct GLBitmapRGBA*, int  , int  , int *  , int *  , int *  , int *  ) ;
	void 	(*add_shadow) (struct GLBitmapRGBA* ) ;
	void 	(*push_shadow_with_distance) (struct GLBitmapRGBA*, int  ) ;
	void 	(*blend_bitmap_x_y) (struct GLBitmapRGBA*, struct GLBitmapRGBA *  , int  , int  ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLBitmapRGBA* ) ;
	void 	(*destruct_CLObject) (struct GLBitmapRGBA* ) ;
	void 	(*retain) (struct GLBitmapRGBA* ) ;
	void 	(*release) (struct GLBitmapRGBA* ) ;
	void 	(*event) (struct GLBitmapRGBA*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLBitmapRGBA* ) ;
	
};
struct GLTextureSquare
{
	struct GLTextureSquare_Class* _class;
	void** _components;
	int width ; 
	int height ; 
	int tex_width ; 
	int tex_height ; 
	int virtual_width ; 
	float r ; 
	float g ; 
	float b ; 
	float a ; 
	float wRatio ; 
	float hRatio ; 
	GLuint id ; 
	GLuint key ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLTextureSquare_Class
{
	char* className;
	void* classId;
	void 	(*init_width_height) (struct GLTextureSquare*, int  , int  ) ;
	void 	(*destruct) (struct GLTextureSquare* ) ;
	void 	(*clone_bitmap) (struct GLTextureSquare*, struct GLBitmapRGBA *  ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLTextureSquare* ) ;
	void 	(*destruct_CLObject) (struct GLTextureSquare* ) ;
	void 	(*retain) (struct GLTextureSquare* ) ;
	void 	(*release) (struct GLTextureSquare* ) ;
	void 	(*event) (struct GLTextureSquare*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLTextureSquare* ) ;
	
};
struct GLBitmapRGBAUtils
{
	struct GLBitmapRGBAUtils_Class* _class;
	void** _components;
	
};
struct GLBitmapRGBAUtils_Class
{
	char* className;
	void* classId;
	struct GLBitmapRGBA * 	(*create_bitmap_width_height_text_size) (struct GLBitmapRGBAUtils*, int  , int  , char *  , int  ) ;
	struct GLBitmapRGBA * 	(*create_bitmap_map_width_height_r_g_b) (struct GLBitmapRGBAUtils*, unsigned char *  , int  , int  , int  , int  , int  ) ;
	struct GLBitmapRGBA * 	(*create_bitmap_pngpath) (struct GLBitmapRGBAUtils*, char *  ) ;
	
};
struct GLUIModel
{
	struct GLUIModel_Class* _class;
	void** _components;
	char * name ; 
	GLfloat * data ; 
	GLuint data_size ; 
	GLuint vertex_count ; 
	GLuint vertex_elements ; 
	GLuint position_in_buffer ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUIModel_Class
{
	char* className;
	void* classId;
	void 	(*init_name) (struct GLUIModel*, char *  ) ;
	void 	(*destruct) (struct GLUIModel* ) ;
	void 	(*set_color) (struct GLUIModel*, float  , float  , float  , float  , GLuint  ) ;
	void 	(*set_texture_coord) (struct GLUIModel*, float  , float  , GLuint  ) ;
	void 	(*set_position) (struct GLUIModel*, float  , float  , float  , GLuint  ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLUIModel* ) ;
	void 	(*destruct_CLObject) (struct GLUIModel* ) ;
	void 	(*retain) (struct GLUIModel* ) ;
	void 	(*release) (struct GLUIModel* ) ;
	void 	(*event) (struct GLUIModel*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLUIModel* ) ;
	
};
struct GLUIModelDrawer
{
	struct GLUIModelDrawer_Class* _class;
	void** _components;
	char needs_reload ; 
	GLint trafo_location ; 
	GLint notex_location ; 
	GLuint buffer_name ; 
	GLuint buffer_size ; 
	GLuint buffer_size_previous ; 
	GLfloat * buffer_data ; 
	struct CLDataList * arrays ; 
	struct CLDataList * models_to_resend ; 
	int attribute_stride ; 
	int * attribute_components ; 
	long * attribute_offset_sizes ; 
	GLuint attribute_counter ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUIModelDrawer_Class
{
	char* className;
	void* classId;
	void 	(*init) (struct GLUIModelDrawer* ) ;
	void 	(*destruct) (struct GLUIModelDrawer* ) ;
	void 	(*addAttribute_location_components_identifier) (struct GLUIModelDrawer*, int  , int  , const char *  ) ;
	struct GLUIVertexArray * 	(*get_array_for_group_level_texture_trafo) (struct GLUIModelDrawer*, GLuint  , GLuint  , GLuint  , MLMatrix4 *  ) ;
	void 	(*add_model_group_level_texture_trafo) (struct GLUIModelDrawer*, struct GLUIModel *  , GLuint  , GLuint  , GLuint  , MLMatrix4 *  ) ;
	void 	(*remove_model_group_level_texture_trafo) (struct GLUIModelDrawer*, struct GLUIModel *  , GLuint  , GLuint  , GLuint  , MLMatrix4 *  ) ;
	void 	(*upload) (struct GLUIModelDrawer* ) ;
	void 	(*resend) (struct GLUIModelDrawer* ) ;
	void 	(*render) (struct GLUIModelDrawer* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init_CLObject) (struct GLUIModelDrawer* ) ;
	void 	(*destruct_CLObject) (struct GLUIModelDrawer* ) ;
	void 	(*retain) (struct GLUIModelDrawer* ) ;
	void 	(*release) (struct GLUIModelDrawer* ) ;
	void 	(*event) (struct GLUIModelDrawer*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLUIModelDrawer* ) ;
	
};
struct GLUIParagraph
{
	struct GLUIParagraph_Class* _class;
	void** _components;
	char * text ; 
	long text_length ; 
	char type ; 
	char align ; 
	char multiline ; 
	MLVector3 minimum_extent ; 
	struct CLObject * delegate ; 
	struct CLDataList * glyphs ; 
	struct GLUICursor * cursor ; 
	struct GLUIElement * selection ; 
	struct TLTextMetrics * metrics ; 
	struct GLFontTrueType * font ; 
	long end_index ; 
	long start_index ; 
	char touch_delay ; 
	char touch_began_flag ; 
	char selection_began_flag ; 
	struct TLFontMetrics * glyph_a ; 
	struct TLFontMetrics * glyph_b ; 
	struct GLUIElement_Class* _class_GLUIElement;
	void** _components_GLUIElement;
	char * name ; 
	char needs_redraw ; 
	char accepts_mouse ; 
	char accepts_focus ; 
	GLuint group ; 
	GLuint level ; 
	GLuint texture ; 
	MLVector3 origo ; 
	MLVector3 extent ; 
	MLVector3 combined_origo ; 
	MLMatrix4 * trafo ; 
	MLMatrix4 * combined_trafo ; 
	struct GLUIModel * model ; 
	struct GLUIModelDrawer * drawer ; 
	struct CLDataList * kids ; 
	struct GLUIElement * parent ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUIParagraph_Class
{
	char* className;
	void* classId;
	void 	(*init_name_frame_font_type_align_multiline) (struct GLUIParagraph*, char *  , MLVector4  , struct GLFontTrueType *  , char  , char  , char  ) ;
	void 	(*destruct) (struct GLUIParagraph* ) ;
	void 	(*focus_on) (struct GLUIParagraph* ) ;
	void 	(*focus_off) (struct GLUIParagraph* ) ;
	void 	(*add_text) (struct GLUIParagraph*, char *  ) ;
	void 	(*remove_all_text) (struct GLUIParagraph* ) ;
	void 	(*add_glyph) (struct GLUIParagraph*, int  ) ;
	void 	(*remove_glyph) (struct GLUIParagraph* ) ;
	void 	(*update_paragraph) (struct GLUIParagraph* ) ;
	void 	(*update) (struct GLUIParagraph* ) ;
	void 	(*animate_glyphs) (struct GLUIParagraph* ) ;
	void 	(*select) (struct GLUIParagraph* ) ;
	void 	(*touch_began) (struct GLUIParagraph*, MLVector3  , MLVector3  ) ;
	void 	(*touch_moved) (struct GLUIParagraph*, MLVector3  , MLVector3  ) ;
	void 	(*touch_ended) (struct GLUIParagraph*, MLVector3  , MLVector3  ) ;
	void 	(*key_down_characters) (struct GLUIParagraph*, char *  ) ;
	void 	(*remove_dead_glyphs) (struct GLUIParagraph* ) ;
	void 	(*show_gylphs_between_x1_x2) (struct GLUIParagraph*, float  , float  ) ;
	void 	(*show_gylphs_between_y1_y2) (struct GLUIParagraph*, float  , float  ) ;
	char* className_GLUIElement;
	void* classId_GLUIElement;
	void 	(*init_name_frame) (struct GLUIParagraph*, char *  , MLVector4  ) ;
	void 	(*destruct_GLUIElement) (struct GLUIParagraph* ) ;
	void 	(*set_level) (struct GLUIParagraph*, int  ) ;
	void 	(*set_group) (struct GLUIParagraph*, int  ) ;
	void 	(*set_texture) (struct GLUIParagraph*, GLuint  ) ;
	void 	(*set_texture_coords) (struct GLUIParagraph*, MLVector4  ) ;
	void 	(*set_color) (struct GLUIParagraph*, float  , float  , float  , float  ) ;
	void 	(*set_origo) (struct GLUIParagraph*, MLVector3  ) ;
	void 	(*set_extent) (struct GLUIParagraph*, MLVector3  ) ;
	void 	(*set_trafo) (struct GLUIParagraph*, MLMatrix4  , char  ) ;
	void 	(*update_GLUIElement) (struct GLUIParagraph* ) ;
	void 	(*update_frame) (struct GLUIParagraph* ) ;
	void 	(*update_trafo) (struct GLUIParagraph* ) ;
	void 	(*get_absolute_frame) (struct GLUIParagraph*, MLVector3 *  , MLVector3 *  , MLVector3 *  , MLVector3 *  ) ;
	void 	(*finalize_frame) (struct GLUIParagraph* ) ;
	void 	(*add_element) (struct GLUIParagraph*, struct GLUIElement *  ) ;
	void 	(*remove_element) (struct GLUIParagraph*, struct GLUIElement *  ) ;
	void 	(*attach) (struct GLUIParagraph*, struct GLUIModelDrawer *  ) ;
	void 	(*detach) (struct GLUIParagraph*, struct GLUIModelDrawer *  ) ;
	MLVector3 	(*get_relative_touch_line_a_line_b) (struct GLUIParagraph*, MLVector3  , MLVector3  ) ;
	void 	(*intersect_line_a_line_b_elements) (struct GLUIParagraph*, MLVector3  , MLVector3  , struct CLDataList *  ) ;
	void 	(*touch_began_GLUIElement) (struct GLUIParagraph*, MLVector3  , MLVector3  ) ;
	void 	(*touch_moved_GLUIElement) (struct GLUIParagraph*, MLVector3  , MLVector3  ) ;
	void 	(*touch_ended_GLUIElement) (struct GLUIParagraph*, MLVector3  , MLVector3  ) ;
	void 	(*key_down_characters_GLUIElement) (struct GLUIParagraph*, char *  ) ;
	void 	(*key_up_characters) (struct GLUIParagraph*, char *  ) ;
	void 	(*scroll_x_y) (struct GLUIParagraph*, float  , float  ) ;
	void 	(*focus_on_GLUIElement) (struct GLUIParagraph* ) ;
	void 	(*focus_off_GLUIElement) (struct GLUIParagraph* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLUIParagraph* ) ;
	void 	(*destruct_CLObject) (struct GLUIParagraph* ) ;
	void 	(*retain) (struct GLUIParagraph* ) ;
	void 	(*release) (struct GLUIParagraph* ) ;
	void 	(*event) (struct GLUIParagraph*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLUIParagraph* ) ;
	
};
struct GLUITrafoAnimator
{
	struct GLUITrafoAnimator_Class* _class;
	void** _components;
	struct CLObject * delegate ; 
	struct CLDataList * animations ; 
	struct GLUITrafoAnimation * animation ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUITrafoAnimator_Class
{
	char* className;
	void* classId;
	void 	(*init) (struct GLUITrafoAnimator* ) ;
	void 	(*destruct) (struct GLUITrafoAnimator* ) ;
	void 	(*add_animation) (struct GLUITrafoAnimator*, struct GLUITrafoAnimation *  ) ;
	void 	(*remove_animation) (struct GLUITrafoAnimator*, struct GLUITrafoAnimation *  ) ;
	void 	(*start) (struct GLUITrafoAnimator* ) ;
	void 	(*reset) (struct GLUITrafoAnimator* ) ;
	void 	(*update) (struct GLUITrafoAnimator* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init_CLObject) (struct GLUITrafoAnimator* ) ;
	void 	(*destruct_CLObject) (struct GLUITrafoAnimator* ) ;
	void 	(*retain) (struct GLUITrafoAnimator* ) ;
	void 	(*release) (struct GLUITrafoAnimator* ) ;
	void 	(*event) (struct GLUITrafoAnimator*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLUITrafoAnimator* ) ;
	
};
struct GLUITrafoAnimation
{
	struct GLUITrafoAnimation_Class* _class;
	void** _components;
	int needed_steps ; 
	int actual_steps ; 
	char easing ; 
	char finished ; 
	struct GLUITrafo * step ; 
	struct GLUITrafo * delta ; 
	struct GLUITrafo * actual ; 
	struct CLObject * delegate ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUITrafoAnimation_Class
{
	char* className;
	void* classId;
	void 	(*init_start_end_steps_easing) (struct GLUITrafoAnimation*, struct GLUITrafo *  , struct GLUITrafo *  , int  , char  ) ;
	void 	(*destruct) (struct GLUITrafoAnimation* ) ;
	void 	(*update) (struct GLUITrafoAnimation* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLUITrafoAnimation* ) ;
	void 	(*destruct_CLObject) (struct GLUITrafoAnimation* ) ;
	void 	(*retain) (struct GLUITrafoAnimation* ) ;
	void 	(*release) (struct GLUITrafoAnimation* ) ;
	void 	(*event) (struct GLUITrafoAnimation*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLUITrafoAnimation* ) ;
	
};
struct GLFontTrueType
{
	struct GLFontTrueType_Class* _class;
	void** _components;
	int r ; 
	int g ; 
	int b ; 
	int font_gap ; 
	int font_ascent ; 
	int font_descent ; 
	float font_size ; 
	float font_scale ; 
	char * name ; 
	stbtt_fontinfo font_info ; 
	unsigned char * font_buffer ; 
	struct GLTextureMap * map ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLFontTrueType_Class
{
	char* className;
	void* classId;
	void 	(*init_name_path_size_r_g_b) (struct GLFontTrueType*, char *  , char *  , float  , int  , int  , int  ) ;
	void 	(*destuct) (struct GLFontTrueType* ) ;
	char 	(*texture_frame_coords_for_codepoint) (struct GLFontTrueType*, GLuint *  , MLVector4 *  , MLVector4 *  , int  ) ;
	char 	(*kerning_for_codeA_codeB) (struct GLFontTrueType*, float *  , int  , int  ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLFontTrueType* ) ;
	void 	(*destruct) (struct GLFontTrueType* ) ;
	void 	(*retain) (struct GLFontTrueType* ) ;
	void 	(*release) (struct GLFontTrueType* ) ;
	void 	(*event) (struct GLFontTrueType*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLFontTrueType* ) ;
	
};
struct GLUIShader
{
	struct GLUIShader_Class* _class;
	void** _components;
	struct GLShader_Class* _class_GLShader;
	void** _components_GLShader;
	char * name ; 
	GLuint program ; 
	GLuint vertex_shader ; 
	GLuint fragment_shader ; 
	const char * vertex_source ; 
	const char * fragment_source ; 
	GLuint uniform_counter ; 
	GLint * uniform_locations ; 
	const char * * uniform_identifiers ; 
	GLuint attribute_counter ; 
	GLuint * attribute_locations ; 
	const char * * attribute_identifiers ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUIShader_Class
{
	char* className;
	void* classId;
	void 	(*init) (struct GLUIShader* ) ;
	char* className_GLShader;
	void* classId_GLShader;
	void 	(*init_name) (struct GLUIShader*, char *  ) ;
	void 	(*destruct) (struct GLUIShader* ) ;
	void 	(*add_vertex_shader_source) (struct GLUIShader*, const char *  ) ;
	void 	(*add_fragment_shader_source) (struct GLUIShader*, const char *  ) ;
	void 	(*add_attribute_identifier_location) (struct GLUIShader*, const char *  , GLuint  ) ;
	void 	(*add_uniform_identifier) (struct GLUIShader*, const char *  ) ;
	GLuint 	(*attribute_location_for_identifier) (struct GLUIShader*, const char *  ) ;
	GLint 	(*uniform_location_for_identifier) (struct GLUIShader*, const char *  ) ;
	void 	(*link) (struct GLUIShader* ) ;
	char 	(*compile_shader_type_source) (struct GLUIShader*, GLuint *  , GLenum  , const GLchar *  ) ;
	char 	(*link_program) (struct GLUIShader* ) ;
	void 	(*use) (struct GLUIShader* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init_CLObject) (struct GLUIShader* ) ;
	void 	(*destruct_CLObject) (struct GLUIShader* ) ;
	void 	(*retain) (struct GLUIShader* ) ;
	void 	(*release) (struct GLUIShader* ) ;
	void 	(*event) (struct GLUIShader*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLUIShader* ) ;
	
};
struct TLPixelFont
{
	struct TLPixelFont_Class* _class;
	void** _components;
	float * data ; 
	int length ; 
	char character ; 
	float width ; 
	float height ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct TLPixelFont_Class
{
	char* className;
	void* classId;
	void 	(*init_character) (struct TLPixelFont*, char  ) ;
	void 	(*destruct) (struct TLPixelFont* ) ;
	const char * 	(*pattern_character) (struct TLPixelFont*, char  ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct TLPixelFont* ) ;
	void 	(*destruct_CLObject) (struct TLPixelFont* ) ;
	void 	(*retain) (struct TLPixelFont* ) ;
	void 	(*release) (struct TLPixelFont* ) ;
	void 	(*event) (struct TLPixelFont*, int  , void *  , void *  ) ;
	void 	(*describe) (struct TLPixelFont* ) ;
	
};
struct TLPixelText
{
	struct TLPixelText_Class* _class;
	void** _components;
	struct CLDataList * letters ; 
	float width ; 
	float height ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct TLPixelText_Class
{
	char* className;
	void* classId;
	void 	(*init_string) (struct TLPixelText*, struct CLString *  ) ;
	void 	(*init_cstring) (struct TLPixelText*, char *  ) ;
	void 	(*destruct) (struct TLPixelText* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct TLPixelText* ) ;
	void 	(*destruct_CLObject) (struct TLPixelText* ) ;
	void 	(*retain) (struct TLPixelText* ) ;
	void 	(*release) (struct TLPixelText* ) ;
	void 	(*event) (struct TLPixelText*, int  , void *  , void *  ) ;
	void 	(*describe) (struct TLPixelText* ) ;
	
};
struct GLUIVertexArray
{
	struct GLUIVertexArray_Class* _class;
	void** _components;
	GLuint group ; 
	GLuint level ; 
	GLuint texture ; 
	GLuint vertex_index ; 
	GLuint vertex_count ; 
	MLMatrix4 * trafo ; 
	struct CLDataList * models ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUIVertexArray_Class
{
	char* className;
	void* classId;
	void 	(*init) (struct GLUIVertexArray*, GLuint  , GLuint  , GLuint  , MLMatrix4 *  ) ;
	void 	(*destruct) (struct GLUIVertexArray* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init_CLObject) (struct GLUIVertexArray*, GLuint  , GLuint  , GLuint  , MLMatrix4 *  ) ;
	void 	(*destruct_CLObject) (struct GLUIVertexArray* ) ;
	void 	(*retain) (struct GLUIVertexArray* ) ;
	void 	(*release) (struct GLUIVertexArray* ) ;
	void 	(*event) (struct GLUIVertexArray*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLUIVertexArray* ) ;
	
};
struct GLUICursor
{
	struct GLUICursor_Class* _class;
	void** _components;
	char counter ; 
	struct GLUIElement_Class* _class_GLUIElement;
	void** _components_GLUIElement;
	char * name ; 
	char needs_redraw ; 
	char accepts_mouse ; 
	char accepts_focus ; 
	GLuint group ; 
	GLuint level ; 
	GLuint texture ; 
	MLVector3 origo ; 
	MLVector3 extent ; 
	MLVector3 combined_origo ; 
	MLMatrix4 * trafo ; 
	MLMatrix4 * combined_trafo ; 
	struct GLUIModel * model ; 
	struct GLUIModelDrawer * drawer ; 
	struct CLDataList * kids ; 
	struct GLUIElement * parent ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUICursor_Class
{
	char* className;
	void* classId;
	void 	(*init_name_frame) (struct GLUICursor*, char *  , MLVector4  ) ;
	void 	(*update) (struct GLUICursor* ) ;
	char* className_GLUIElement;
	void* classId_GLUIElement;
	void 	(*init_name_frame_GLUIElement) (struct GLUICursor*, char *  , MLVector4  ) ;
	void 	(*destruct) (struct GLUICursor* ) ;
	void 	(*set_level) (struct GLUICursor*, int  ) ;
	void 	(*set_group) (struct GLUICursor*, int  ) ;
	void 	(*set_texture) (struct GLUICursor*, GLuint  ) ;
	void 	(*set_texture_coords) (struct GLUICursor*, MLVector4  ) ;
	void 	(*set_color) (struct GLUICursor*, float  , float  , float  , float  ) ;
	void 	(*set_origo) (struct GLUICursor*, MLVector3  ) ;
	void 	(*set_extent) (struct GLUICursor*, MLVector3  ) ;
	void 	(*set_trafo) (struct GLUICursor*, MLMatrix4  , char  ) ;
	void 	(*update_GLUIElement) (struct GLUICursor* ) ;
	void 	(*update_frame) (struct GLUICursor* ) ;
	void 	(*update_trafo) (struct GLUICursor* ) ;
	void 	(*get_absolute_frame) (struct GLUICursor*, MLVector3 *  , MLVector3 *  , MLVector3 *  , MLVector3 *  ) ;
	void 	(*finalize_frame) (struct GLUICursor* ) ;
	void 	(*add_element) (struct GLUICursor*, struct GLUIElement *  ) ;
	void 	(*remove_element) (struct GLUICursor*, struct GLUIElement *  ) ;
	void 	(*attach) (struct GLUICursor*, struct GLUIModelDrawer *  ) ;
	void 	(*detach) (struct GLUICursor*, struct GLUIModelDrawer *  ) ;
	MLVector3 	(*get_relative_touch_line_a_line_b) (struct GLUICursor*, MLVector3  , MLVector3  ) ;
	void 	(*intersect_line_a_line_b_elements) (struct GLUICursor*, MLVector3  , MLVector3  , struct CLDataList *  ) ;
	void 	(*touch_began) (struct GLUICursor*, MLVector3  , MLVector3  ) ;
	void 	(*touch_moved) (struct GLUICursor*, MLVector3  , MLVector3  ) ;
	void 	(*touch_ended) (struct GLUICursor*, MLVector3  , MLVector3  ) ;
	void 	(*key_down_characters) (struct GLUICursor*, char *  ) ;
	void 	(*key_up_characters) (struct GLUICursor*, char *  ) ;
	void 	(*scroll_x_y) (struct GLUICursor*, float  , float  ) ;
	void 	(*focus_on) (struct GLUICursor* ) ;
	void 	(*focus_off) (struct GLUICursor* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLUICursor* ) ;
	void 	(*destruct_CLObject) (struct GLUICursor* ) ;
	void 	(*retain) (struct GLUICursor* ) ;
	void 	(*release) (struct GLUICursor* ) ;
	void 	(*event) (struct GLUICursor*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLUICursor* ) ;
	
};
struct GLUIGlyph
{
	struct GLUIGlyph_Class* _class;
	void** _components;
	int codepoint ; 
	char visible ; 
	char animated ; 
	char expanded ; 
	MLVector4 texcoords ; 
	struct TLFontMetrics * metrics ; 
	struct GLUITrafoAnimator * animator ; 
	struct GLUIElement_Class* _class_GLUIElement;
	void** _components_GLUIElement;
	char * name ; 
	char needs_redraw ; 
	char accepts_mouse ; 
	char accepts_focus ; 
	GLuint group ; 
	GLuint level ; 
	GLuint texture ; 
	MLVector3 origo ; 
	MLVector3 extent ; 
	MLVector3 combined_origo ; 
	MLMatrix4 * trafo ; 
	MLMatrix4 * combined_trafo ; 
	struct GLUIModel * model ; 
	struct GLUIModelDrawer * drawer ; 
	struct CLDataList * kids ; 
	struct GLUIElement * parent ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLUIGlyph_Class
{
	char* className;
	void* classId;
	void 	(*init_name_frame) (struct GLUIGlyph*, char *  , MLVector4  ) ;
	void 	(*destruct) (struct GLUIGlyph* ) ;
	void 	(*shrink) (struct GLUIGlyph*, float  , char  ) ;
	void 	(*expand) (struct GLUIGlyph* ) ;
	void 	(*animate_to_position) (struct GLUIGlyph*, int  ) ;
	void 	(*update) (struct GLUIGlyph* ) ;
	void 	(*event) (struct GLUIGlyph*, int  , void *  , void *  ) ;
	char* className_GLUIElement;
	void* classId_GLUIElement;
	void 	(*init_name_frame_GLUIElement) (struct GLUIGlyph*, char *  , MLVector4  ) ;
	void 	(*destruct_GLUIElement) (struct GLUIGlyph* ) ;
	void 	(*set_level) (struct GLUIGlyph*, int  ) ;
	void 	(*set_group) (struct GLUIGlyph*, int  ) ;
	void 	(*set_texture) (struct GLUIGlyph*, GLuint  ) ;
	void 	(*set_texture_coords) (struct GLUIGlyph*, MLVector4  ) ;
	void 	(*set_color) (struct GLUIGlyph*, float  , float  , float  , float  ) ;
	void 	(*set_origo) (struct GLUIGlyph*, MLVector3  ) ;
	void 	(*set_extent) (struct GLUIGlyph*, MLVector3  ) ;
	void 	(*set_trafo) (struct GLUIGlyph*, MLMatrix4  , char  ) ;
	void 	(*update_GLUIElement) (struct GLUIGlyph* ) ;
	void 	(*update_frame) (struct GLUIGlyph* ) ;
	void 	(*update_trafo) (struct GLUIGlyph* ) ;
	void 	(*get_absolute_frame) (struct GLUIGlyph*, MLVector3 *  , MLVector3 *  , MLVector3 *  , MLVector3 *  ) ;
	void 	(*finalize_frame) (struct GLUIGlyph* ) ;
	void 	(*add_element) (struct GLUIGlyph*, struct GLUIElement *  ) ;
	void 	(*remove_element) (struct GLUIGlyph*, struct GLUIElement *  ) ;
	void 	(*attach) (struct GLUIGlyph*, struct GLUIModelDrawer *  ) ;
	void 	(*detach) (struct GLUIGlyph*, struct GLUIModelDrawer *  ) ;
	MLVector3 	(*get_relative_touch_line_a_line_b) (struct GLUIGlyph*, MLVector3  , MLVector3  ) ;
	void 	(*intersect_line_a_line_b_elements) (struct GLUIGlyph*, MLVector3  , MLVector3  , struct CLDataList *  ) ;
	void 	(*touch_began) (struct GLUIGlyph*, MLVector3  , MLVector3  ) ;
	void 	(*touch_moved) (struct GLUIGlyph*, MLVector3  , MLVector3  ) ;
	void 	(*touch_ended) (struct GLUIGlyph*, MLVector3  , MLVector3  ) ;
	void 	(*key_down_characters) (struct GLUIGlyph*, char *  ) ;
	void 	(*key_up_characters) (struct GLUIGlyph*, char *  ) ;
	void 	(*scroll_x_y) (struct GLUIGlyph*, float  , float  ) ;
	void 	(*focus_on) (struct GLUIGlyph* ) ;
	void 	(*focus_off) (struct GLUIGlyph* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLUIGlyph* ) ;
	void 	(*destruct_CLObject) (struct GLUIGlyph* ) ;
	void 	(*retain) (struct GLUIGlyph* ) ;
	void 	(*release) (struct GLUIGlyph* ) ;
	void 	(*event_CLObject) (struct GLUIGlyph*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLUIGlyph* ) ;
	
};
struct TLTextMetrics
{
	struct TLTextMetrics_Class* _class;
	void** _components;
	char type ; 
	char align ; 
	float width ; 
	float height ; 
	float line_height ; 
	struct CLDataList * fonts ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct TLTextMetrics_Class
{
	char* className;
	void* classId;
	void 	(*init_type_align_lineheight_width) (struct TLTextMetrics*, char  , char  , float  , float  ) ;
	void 	(*destruct) (struct TLTextMetrics* ) ;
	void 	(*add_font) (struct TLTextMetrics*, struct TLFontMetrics *  ) ;
	void 	(*add_font_index) (struct TLTextMetrics*, struct TLFontMetrics *  , long  ) ;
	void 	(*remove) (struct TLTextMetrics* ) ;
	void 	(*remove_index) (struct TLTextMetrics*, long  ) ;
	void 	(*remove_all_fonts) (struct TLTextMetrics* ) ;
	void 	(*update) (struct TLTextMetrics* ) ;
	void 	(*update_single_line) (struct TLTextMetrics* ) ;
	void 	(*update_multiline) (struct TLTextMetrics* ) ;
	void 	(*justify_line) (struct TLTextMetrics*, float *  , long  , float  , struct CLDataList *  ) ;
	void 	(*center_line) (struct TLTextMetrics*, float *  , float  , struct CLDataList *  ) ;
	unsigned long 	(*glyph_index_at_x_y) (struct TLTextMetrics*, float  , float  ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct TLTextMetrics* ) ;
	void 	(*destruct_CLObject) (struct TLTextMetrics* ) ;
	void 	(*retain) (struct TLTextMetrics* ) ;
	void 	(*release) (struct TLTextMetrics* ) ;
	void 	(*event) (struct TLTextMetrics*, int  , void *  , void *  ) ;
	void 	(*describe) (struct TLTextMetrics* ) ;
	
};
struct TLFontMetrics
{
	struct TLFontMetrics_Class* _class;
	void** _components;
	int code ; 
	char dead ; 
	float kerning ; 
	MLVector4 frame ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct TLFontMetrics_Class
{
	char* className;
	void* classId;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct TLFontMetrics* ) ;
	void 	(*destruct) (struct TLFontMetrics* ) ;
	void 	(*retain) (struct TLFontMetrics* ) ;
	void 	(*release) (struct TLFontMetrics* ) ;
	void 	(*event) (struct TLFontMetrics*, int  , void *  , void *  ) ;
	void 	(*describe) (struct TLFontMetrics* ) ;
	
};
struct GLTextureMap
{
	struct GLTextureMap_Class* _class;
	void** _components;
	int width ; 
	int height ; 
	int row_height ; 
	int cursor_x ; 
	int cursor_y ; 
	struct CLDataList * keys ; 
	struct CLDataList * names ; 
	struct CLDataList * frames ; 
	struct CLDataList * coords ; 
	struct CLDataList * bitmaps ; 
	struct CLDataList * names_by_bitmap ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLTextureMap_Class
{
	char* className;
	void* classId;
	void 	(*init_width_height) (struct GLTextureMap*, int  , int  ) ;
	void 	(*destruct) (struct GLTextureMap* ) ;
	void 	(*create_bitmap_texture) (struct GLTextureMap* ) ;
	char 	(*texture_frame_coords_for_key) (struct GLTextureMap*, GLuint *  , MLVector4 *  , MLVector4 *  , int  ) ;
	MLVector4 	(*add_bitmap_for_key) (struct GLTextureMap*, struct GLBitmapRGBA *  , int  ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLTextureMap* ) ;
	void 	(*destruct_CLObject) (struct GLTextureMap* ) ;
	void 	(*retain) (struct GLTextureMap* ) ;
	void 	(*release) (struct GLTextureMap* ) ;
	void 	(*event) (struct GLTextureMap*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLTextureMap* ) ;
	
};
struct GLShader
{
	struct GLShader_Class* _class;
	void** _components;
	char * name ; 
	GLuint program ; 
	GLuint vertex_shader ; 
	GLuint fragment_shader ; 
	const char * vertex_source ; 
	const char * fragment_source ; 
	GLuint uniform_counter ; 
	GLint * uniform_locations ; 
	const char * * uniform_identifiers ; 
	GLuint attribute_counter ; 
	GLuint * attribute_locations ; 
	const char * * attribute_identifiers ; 
	struct CLObject_Class* _class_CLObject;
	void** _components_CLObject;
	unsigned long retain_count ; 
	
};
struct GLShader_Class
{
	char* className;
	void* classId;
	void 	(*init_name) (struct GLShader*, char *  ) ;
	void 	(*destruct) (struct GLShader* ) ;
	void 	(*add_vertex_shader_source) (struct GLShader*, const char *  ) ;
	void 	(*add_fragment_shader_source) (struct GLShader*, const char *  ) ;
	void 	(*add_attribute_identifier_location) (struct GLShader*, const char *  , GLuint  ) ;
	void 	(*add_uniform_identifier) (struct GLShader*, const char *  ) ;
	GLuint 	(*attribute_location_for_identifier) (struct GLShader*, const char *  ) ;
	GLint 	(*uniform_location_for_identifier) (struct GLShader*, const char *  ) ;
	void 	(*link) (struct GLShader* ) ;
	char 	(*compile_shader_type_source) (struct GLShader*, GLuint *  , GLenum  , const GLchar *  ) ;
	char 	(*link_program) (struct GLShader* ) ;
	void 	(*use) (struct GLShader* ) ;
	char* className_CLObject;
	void* classId_CLObject;
	void 	(*init) (struct GLShader* ) ;
	void 	(*destruct_CLObject) (struct GLShader* ) ;
	void 	(*retain) (struct GLShader* ) ;
	void 	(*release) (struct GLShader* ) ;
	void 	(*event) (struct GLShader*, int  , void *  , void *  ) ;
	void 	(*describe) (struct GLShader* ) ;
	
};
void* cast_object( void* theObject , void* theId );
void  free_object( void* theObject );
void PRController_CreateClass( );
struct PRController* PRController_alloc( );
void PRController_init_width_height_resources_path (struct PRController* self, float the_width , float the_height , char * the_resources_path ) ;
void PRController_build (struct PRController* self ) ;
void PRController_destruct (struct PRController* self ) ;
void PRController_step_right (struct PRController* self ) ;
void PRController_step_left (struct PRController* self ) ;
void PRController_update (struct PRController* self ) ;
void PRController_render (struct PRController* self ) ;
void PRController_scroll_x_y (struct PRController* self, float the_x , float the_y ) ;
void PRController_mouse_down_at_x_y (struct PRController* self, float the_x , float the_y ) ;
void PRController_mouse_up_at_x_y (struct PRController* self, float the_x , float the_y ) ;
void PRController_mouse_move_at_x_y (struct PRController* self, float the_x , float the_y ) ;
void PRController_left_pressed (struct PRController* self ) ;
void PRController_right_pressed (struct PRController* self ) ;
void PRController_key_down_characters (struct PRController* self, char * the_characters ) ;
void PRController_init (struct PRController* self ) ;
void PRController_retain (struct PRController* self ) ;
void PRController_release (struct PRController* self ) ;
void PRController_event (struct PRController* self, int the_id , void * the_source , void * the_data ) ;
void PRController_describe (struct PRController* self ) ;
void CLString_CreateClass( );
struct CLString* CLString_alloc( );
void CLString_init (struct CLString* self ) ;
void CLString_init_string (struct CLString* self, struct CLString * the_string ) ;
void CLString_init_cstring (struct CLString* self, char * the_string ) ;
void CLString_destruct (struct CLString* self ) ;
void CLString_append_character (struct CLString* self, char the_character ) ;
void CLString_append_string (struct CLString* self, struct CLString * the_string ) ;
void CLString_append_cstring (struct CLString* self, char * the_string ) ;
void CLString_remove_all_characters (struct CLString* self ) ;
void CLString_read_filePath (struct CLString* self, struct CLString * the_path ) ;
void CLString_read_file_pointer (struct CLString* self, FILE * the_pointer ) ;
void CLString_write_file_path (struct CLString* self, struct CLString * the_path ) ;
void CLString_write_file_pointer (struct CLString* self, FILE * theFilePointer ) ;
struct CLString * CLString_string_from_last_component (struct CLString* self ) ;
struct CLString * CLString_substring_from_index (struct CLString* self, unsigned long the_index ) ;
struct CLString * CLString_string_by_removing_extension (struct CLString* self ) ;
struct CLString * CLString_string_by_removing_last_path_component (struct CLString* self ) ;
char CLString_contains_string (struct CLString* self, struct CLString * the_string ) ;
unsigned long CLString_index_string (struct CLString* self, struct CLString * the_search_string ) ;
char CLString_equals_string (struct CLString* self, struct CLString * the_string_b ) ;
char * CLString_c_string (struct CLString* self ) ;
void CLString_describe (struct CLString* self ) ;
void CLString_retain (struct CLString* self ) ;
void CLString_release (struct CLString* self ) ;
void CLString_event (struct CLString* self, int the_id , void * the_source , void * the_data ) ;
void CLObject_CreateClass( );
struct CLObject* CLObject_alloc( );
void CLObject_init (struct CLObject* self ) ;
void CLObject_destruct (struct CLObject* self ) ;
void CLObject_retain (struct CLObject* self ) ;
void CLObject_release (struct CLObject* self ) ;
void CLObject_event (struct CLObject* self, int the_id , void * the_source , void * the_data ) ;
void CLObject_describe (struct CLObject* self ) ;
void CLDataList_CreateClass( );
struct CLDataList* CLDataList_alloc( );
void CLDataList_init (struct CLDataList* self ) ;
void CLDataList_destruct (struct CLDataList* self ) ;
void CLDataList_add_data (struct CLDataList* self, void * the_data ) ;
void CLDataList_add_data_at_index (struct CLDataList* self, void * the_data , unsigned long the_index ) ;
void CLDataList_add_data_list (struct CLDataList* self, struct CLDataList * the_data_list ) ;
char CLDataList_remove_data (struct CLDataList* self, void * the_data ) ;
void * CLDataList_remove_data_at_index (struct CLDataList* self, unsigned long the_index ) ;
void CLDataList_remove_all_data (struct CLDataList* self ) ;
void * CLDataList_data_at_index (struct CLDataList* self, unsigned long the_index ) ;
struct CLLink * CLDataList_link_at_index (struct CLDataList* self, unsigned long the_index ) ;
char CLDataList_contains_data (struct CLDataList* self, void * the_data ) ;
unsigned long CLDataList_index_of_data (struct CLDataList* self, void * the_data ) ;
void * CLDataList_first_data (struct CLDataList* self ) ;
void * CLDataList_last_data (struct CLDataList* self ) ;
struct CLDataList * CLDataList_clone (struct CLDataList* self ) ;
void CLDataList_describe (struct CLDataList* self ) ;
void CLDataList_retain (struct CLDataList* self ) ;
void CLDataList_release (struct CLDataList* self ) ;
void CLDataList_event (struct CLDataList* self, int the_id , void * the_source , void * the_data ) ;
void PRLifeRoom_CreateClass( );
struct PRLifeRoom* PRLifeRoom_alloc( );
void PRLifeRoom_init_name_frame_controller (struct PRLifeRoom* self, char * the_name , MLVector4 the_frame , struct PRController * the_controller ) ;
void PRLifeRoom_build (struct PRLifeRoom* self ) ;
void PRLifeRoom_destruct (struct PRLifeRoom* self ) ;
void PRLifeRoom_create_info_view (struct PRLifeRoom* self, char * the_image , char * the_large_image , char * the_title_label , char * the_subtitle_label , char * the_description_label , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRLifeRoom_create_empty_view (struct PRLifeRoom* self, MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRLifeRoom_create_texture_area (struct PRLifeRoom* self, struct GLTextureSquare * the_texture , float the_width , float the_height , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRLifeRoom_create_image_area (struct PRLifeRoom* self, char * the_path , float the_width , float the_height , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRLifeRoom_update (struct PRLifeRoom* self ) ;
void PRLifeRoom_step_right (struct PRLifeRoom* self ) ;
void PRLifeRoom_step_left (struct PRLifeRoom* self ) ;
void PRLifeRoom_collapse (struct PRLifeRoom* self ) ;
void PRLifeRoom_init_name_frame (struct PRLifeRoom* self, char * the_name , MLVector4 the_frame ) ;
void PRLifeRoom_set_level (struct PRLifeRoom* self, int the_level ) ;
void PRLifeRoom_set_group (struct PRLifeRoom* self, int the_group ) ;
void PRLifeRoom_set_texture (struct PRLifeRoom* self, GLuint the_texture ) ;
void PRLifeRoom_set_texture_coords (struct PRLifeRoom* self, MLVector4 theCoords ) ;
void PRLifeRoom_set_color (struct PRLifeRoom* self, float the_r , float the_g , float the_b , float theA ) ;
void PRLifeRoom_set_origo (struct PRLifeRoom* self, MLVector3 the_origo ) ;
void PRLifeRoom_set_extent (struct PRLifeRoom* self, MLVector3 the_extent ) ;
void PRLifeRoom_set_trafo (struct PRLifeRoom* self, MLMatrix4 the_trafo , char the_identity_flag ) ;
void PRLifeRoom_update_frame (struct PRLifeRoom* self ) ;
void PRLifeRoom_update_trafo (struct PRLifeRoom* self ) ;
void PRLifeRoom_get_absolute_frame (struct PRLifeRoom* self, MLVector3 * the_a , MLVector3 * the_b , MLVector3 * the_c , MLVector3 * the_d ) ;
void PRLifeRoom_finalize_frame (struct PRLifeRoom* self ) ;
void PRLifeRoom_add_element (struct PRLifeRoom* self, struct GLUIElement * the_element ) ;
void PRLifeRoom_remove_element (struct PRLifeRoom* self, struct GLUIElement * the_element ) ;
void PRLifeRoom_attach (struct PRLifeRoom* self, struct GLUIModelDrawer * the_drawer ) ;
void PRLifeRoom_detach (struct PRLifeRoom* self, struct GLUIModelDrawer * the_drawer ) ;
MLVector3 PRLifeRoom_get_relative_touch_line_a_line_b (struct PRLifeRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRLifeRoom_intersect_line_a_line_b_elements (struct PRLifeRoom* self, MLVector3 the_line_a , MLVector3 the_line_b , struct CLDataList * elements ) ;
void PRLifeRoom_touch_began (struct PRLifeRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRLifeRoom_touch_moved (struct PRLifeRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRLifeRoom_touch_ended (struct PRLifeRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRLifeRoom_key_down_characters (struct PRLifeRoom* self, char * the_characters ) ;
void PRLifeRoom_key_up_characters (struct PRLifeRoom* self, char * the_characters ) ;
void PRLifeRoom_scroll_x_y (struct PRLifeRoom* self, float the_x , float the_y ) ;
void PRLifeRoom_focus_on (struct PRLifeRoom* self ) ;
void PRLifeRoom_focus_off (struct PRLifeRoom* self ) ;
void PRLifeRoom_init (struct PRLifeRoom* self ) ;
void PRLifeRoom_retain (struct PRLifeRoom* self ) ;
void PRLifeRoom_release (struct PRLifeRoom* self ) ;
void PRLifeRoom_event (struct PRLifeRoom* self, int the_id , void * the_source , void * the_data ) ;
void PRLifeRoom_describe (struct PRLifeRoom* self ) ;
void PRSettings_CreateClass( );
struct PRSettings* PRSettings_alloc( );
void PRSettings_init_resources_path (struct PRSettings* self, char * the_path ) ;
void PRSettings_destruct (struct PRSettings* self ) ;
struct CLString * PRSettings_path_for_file (struct PRSettings* self, char * the_file ) ;
void PRSettings_init (struct PRSettings* self ) ;
void PRSettings_retain (struct PRSettings* self ) ;
void PRSettings_release (struct PRSettings* self ) ;
void PRSettings_event (struct PRSettings* self, int the_id , void * the_source , void * the_data ) ;
void PRSettings_describe (struct PRSettings* self ) ;
void PRMeasures_CreateClass( );
struct PRMeasures* PRMeasures_alloc( );
void PRMeasures_init_width_height (struct PRMeasures* self, float the_width , float the_height ) ;
void PRMeasures_init (struct PRMeasures* self ) ;
void PRMeasures_destruct (struct PRMeasures* self ) ;
void PRMeasures_retain (struct PRMeasures* self ) ;
void PRMeasures_release (struct PRMeasures* self ) ;
void PRMeasures_event (struct PRMeasures* self, int the_id , void * the_source , void * the_data ) ;
void PRMeasures_describe (struct PRMeasures* self ) ;
void PRInfoView_CreateClass( );
struct PRInfoView* PRInfoView_alloc( );
void PRInfoView_init_name_frame_controller (struct PRInfoView* self, char * the_name , MLVector4 the_frame , struct PRController * the_controller ) ;
void PRInfoView_destruct (struct PRInfoView* self ) ;
void PRInfoView_set_title_label (struct PRInfoView* self, char * the_label ) ;
void PRInfoView_set_subtitle_label (struct PRInfoView* self, char * the_label ) ;
void PRInfoView_set_description_label (struct PRInfoView* self, char * the_label ) ;
void PRInfoView_show (struct PRInfoView* self ) ;
void PRInfoView_show_with_animation (struct PRInfoView* self ) ;
void PRInfoView_hide (struct PRInfoView* self ) ;
void PRInfoView_load_large (struct PRInfoView* self ) ;
void PRInfoView_set_image (struct PRInfoView* self, char * the_image ) ;
void PRInfoView_update (struct PRInfoView* self ) ;
void PRInfoView_event (struct PRInfoView* self, int the_id , void * the_source , void * the_data ) ;
void PRInfoView_init_name_frame (struct PRInfoView* self, char * the_name , MLVector4 the_frame ) ;
void PRInfoView_set_level (struct PRInfoView* self, int the_level ) ;
void PRInfoView_set_group (struct PRInfoView* self, int the_group ) ;
void PRInfoView_set_texture (struct PRInfoView* self, GLuint the_texture ) ;
void PRInfoView_set_texture_coords (struct PRInfoView* self, MLVector4 theCoords ) ;
void PRInfoView_set_color (struct PRInfoView* self, float the_r , float the_g , float the_b , float theA ) ;
void PRInfoView_set_origo (struct PRInfoView* self, MLVector3 the_origo ) ;
void PRInfoView_set_extent (struct PRInfoView* self, MLVector3 the_extent ) ;
void PRInfoView_set_trafo (struct PRInfoView* self, MLMatrix4 the_trafo , char the_identity_flag ) ;
void PRInfoView_update_frame (struct PRInfoView* self ) ;
void PRInfoView_update_trafo (struct PRInfoView* self ) ;
void PRInfoView_get_absolute_frame (struct PRInfoView* self, MLVector3 * the_a , MLVector3 * the_b , MLVector3 * the_c , MLVector3 * the_d ) ;
void PRInfoView_finalize_frame (struct PRInfoView* self ) ;
void PRInfoView_add_element (struct PRInfoView* self, struct GLUIElement * the_element ) ;
void PRInfoView_remove_element (struct PRInfoView* self, struct GLUIElement * the_element ) ;
void PRInfoView_attach (struct PRInfoView* self, struct GLUIModelDrawer * the_drawer ) ;
void PRInfoView_detach (struct PRInfoView* self, struct GLUIModelDrawer * the_drawer ) ;
MLVector3 PRInfoView_get_relative_touch_line_a_line_b (struct PRInfoView* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRInfoView_intersect_line_a_line_b_elements (struct PRInfoView* self, MLVector3 the_line_a , MLVector3 the_line_b , struct CLDataList * elements ) ;
void PRInfoView_touch_began (struct PRInfoView* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRInfoView_touch_moved (struct PRInfoView* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRInfoView_touch_ended (struct PRInfoView* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRInfoView_key_down_characters (struct PRInfoView* self, char * the_characters ) ;
void PRInfoView_key_up_characters (struct PRInfoView* self, char * the_characters ) ;
void PRInfoView_scroll_x_y (struct PRInfoView* self, float the_x , float the_y ) ;
void PRInfoView_focus_on (struct PRInfoView* self ) ;
void PRInfoView_focus_off (struct PRInfoView* self ) ;
void PRInfoView_init (struct PRInfoView* self ) ;
void PRInfoView_retain (struct PRInfoView* self ) ;
void PRInfoView_release (struct PRInfoView* self ) ;
void PRInfoView_describe (struct PRInfoView* self ) ;
void PRFontManager_CreateClass( );
struct PRFontManager* PRFontManager_alloc( );
void PRFontManager_init_settings (struct PRFontManager* self, struct PRSettings * the_settings ) ;
void PRFontManager_destruct (struct PRFontManager* self ) ;
struct GLFontTrueType * PRFontManager_font_for_name_size_r_g_b (struct PRFontManager* self, char * the_name , float the_size , int the_r , int the_g , int the_b ) ;
void PRFontManager_init (struct PRFontManager* self ) ;
void PRFontManager_retain (struct PRFontManager* self ) ;
void PRFontManager_release (struct PRFontManager* self ) ;
void PRFontManager_event (struct PRFontManager* self, int the_id , void * the_source , void * the_data ) ;
void PRFontManager_describe (struct PRFontManager* self ) ;
void GLUIImageArea_CreateClass( );
struct GLUIImageArea* GLUIImageArea_alloc( );
void GLUIImageArea_init_name_frame_path (struct GLUIImageArea* self, char * the_name , MLVector4 the_frame , char * the_path ) ;
void GLUIImageArea_destruct (struct GLUIImageArea* self ) ;
void GLUIImageArea_init_name_frame (struct GLUIImageArea* self, char * the_name , MLVector4 the_frame ) ;
void GLUIImageArea_set_level (struct GLUIImageArea* self, int the_level ) ;
void GLUIImageArea_set_group (struct GLUIImageArea* self, int the_group ) ;
void GLUIImageArea_set_texture (struct GLUIImageArea* self, GLuint the_texture ) ;
void GLUIImageArea_set_texture_coords (struct GLUIImageArea* self, MLVector4 theCoords ) ;
void GLUIImageArea_set_color (struct GLUIImageArea* self, float the_r , float the_g , float the_b , float theA ) ;
void GLUIImageArea_set_origo (struct GLUIImageArea* self, MLVector3 the_origo ) ;
void GLUIImageArea_set_extent (struct GLUIImageArea* self, MLVector3 the_extent ) ;
void GLUIImageArea_set_trafo (struct GLUIImageArea* self, MLMatrix4 the_trafo , char the_identity_flag ) ;
void GLUIImageArea_update (struct GLUIImageArea* self ) ;
void GLUIImageArea_update_frame (struct GLUIImageArea* self ) ;
void GLUIImageArea_update_trafo (struct GLUIImageArea* self ) ;
void GLUIImageArea_get_absolute_frame (struct GLUIImageArea* self, MLVector3 * the_a , MLVector3 * the_b , MLVector3 * the_c , MLVector3 * the_d ) ;
void GLUIImageArea_finalize_frame (struct GLUIImageArea* self ) ;
void GLUIImageArea_add_element (struct GLUIImageArea* self, struct GLUIElement * the_element ) ;
void GLUIImageArea_remove_element (struct GLUIImageArea* self, struct GLUIElement * the_element ) ;
void GLUIImageArea_attach (struct GLUIImageArea* self, struct GLUIModelDrawer * the_drawer ) ;
void GLUIImageArea_detach (struct GLUIImageArea* self, struct GLUIModelDrawer * the_drawer ) ;
MLVector3 GLUIImageArea_get_relative_touch_line_a_line_b (struct GLUIImageArea* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIImageArea_intersect_line_a_line_b_elements (struct GLUIImageArea* self, MLVector3 the_line_a , MLVector3 the_line_b , struct CLDataList * elements ) ;
void GLUIImageArea_touch_began (struct GLUIImageArea* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIImageArea_touch_moved (struct GLUIImageArea* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIImageArea_touch_ended (struct GLUIImageArea* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIImageArea_key_down_characters (struct GLUIImageArea* self, char * the_characters ) ;
void GLUIImageArea_key_up_characters (struct GLUIImageArea* self, char * the_characters ) ;
void GLUIImageArea_scroll_x_y (struct GLUIImageArea* self, float the_x , float the_y ) ;
void GLUIImageArea_focus_on (struct GLUIImageArea* self ) ;
void GLUIImageArea_focus_off (struct GLUIImageArea* self ) ;
void GLUIImageArea_init (struct GLUIImageArea* self ) ;
void GLUIImageArea_retain (struct GLUIImageArea* self ) ;
void GLUIImageArea_release (struct GLUIImageArea* self ) ;
void GLUIImageArea_event (struct GLUIImageArea* self, int the_id , void * the_source , void * the_data ) ;
void GLUIImageArea_describe (struct GLUIImageArea* self ) ;
void GLUIElement_CreateClass( );
struct GLUIElement* GLUIElement_alloc( );
void GLUIElement_init_name_frame (struct GLUIElement* self, char * the_name , MLVector4 the_frame ) ;
void GLUIElement_destruct (struct GLUIElement* self ) ;
void GLUIElement_set_level (struct GLUIElement* self, int the_level ) ;
void GLUIElement_set_group (struct GLUIElement* self, int the_group ) ;
void GLUIElement_set_texture (struct GLUIElement* self, GLuint the_texture ) ;
void GLUIElement_set_texture_coords (struct GLUIElement* self, MLVector4 theCoords ) ;
void GLUIElement_set_color (struct GLUIElement* self, float the_r , float the_g , float the_b , float theA ) ;
void GLUIElement_set_origo (struct GLUIElement* self, MLVector3 the_origo ) ;
void GLUIElement_set_extent (struct GLUIElement* self, MLVector3 the_extent ) ;
void GLUIElement_set_trafo (struct GLUIElement* self, MLMatrix4 the_trafo , char the_identity_flag ) ;
void GLUIElement_update (struct GLUIElement* self ) ;
void GLUIElement_update_frame (struct GLUIElement* self ) ;
void GLUIElement_update_trafo (struct GLUIElement* self ) ;
void GLUIElement_get_absolute_frame (struct GLUIElement* self, MLVector3 * the_a , MLVector3 * the_b , MLVector3 * the_c , MLVector3 * the_d ) ;
void GLUIElement_finalize_frame (struct GLUIElement* self ) ;
void GLUIElement_add_element (struct GLUIElement* self, struct GLUIElement * the_element ) ;
void GLUIElement_remove_element (struct GLUIElement* self, struct GLUIElement * the_element ) ;
void GLUIElement_attach (struct GLUIElement* self, struct GLUIModelDrawer * the_drawer ) ;
void GLUIElement_detach (struct GLUIElement* self, struct GLUIModelDrawer * the_drawer ) ;
MLVector3 GLUIElement_get_relative_touch_line_a_line_b (struct GLUIElement* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIElement_intersect_line_a_line_b_elements (struct GLUIElement* self, MLVector3 the_line_a , MLVector3 the_line_b , struct CLDataList * elements ) ;
void GLUIElement_touch_began (struct GLUIElement* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIElement_touch_moved (struct GLUIElement* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIElement_touch_ended (struct GLUIElement* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIElement_key_down_characters (struct GLUIElement* self, char * the_characters ) ;
void GLUIElement_key_up_characters (struct GLUIElement* self, char * the_characters ) ;
void GLUIElement_scroll_x_y (struct GLUIElement* self, float the_x , float the_y ) ;
void GLUIElement_focus_on (struct GLUIElement* self ) ;
void GLUIElement_focus_off (struct GLUIElement* self ) ;
void GLUIElement_init (struct GLUIElement* self ) ;
void GLUIElement_retain (struct GLUIElement* self ) ;
void GLUIElement_release (struct GLUIElement* self ) ;
void GLUIElement_event (struct GLUIElement* self, int the_id , void * the_source , void * the_data ) ;
void GLUIElement_describe (struct GLUIElement* self ) ;
void GLUIController_CreateClass( );
struct GLUIController* GLUIController_alloc( );
void GLUIController_init_fov_width_height_nead_far (struct GLUIController* self, float the_fov , float the_width , float the_height , float the_near , float the_far ) ;
void GLUIController_destruct (struct GLUIController* self ) ;
void GLUIController_update (struct GLUIController* self ) ;
void GLUIController_render (struct GLUIController* self ) ;
void GLUIController_zoom_to_element (struct GLUIController* self, struct GLUIElement * the_element , int the_steps , char the_easing ) ;
void GLUIController_zoom_to_ui_trafo (struct GLUIController* self, struct GLUITrafo * the_trafo , int the_steps , char the_easing ) ;
void GLUIController_set_view_ui_trafo (struct GLUIController* self, struct GLUITrafo * the_trafo ) ;
void GLUIController_set_view_trafo (struct GLUIController* self, MLMatrix4 the_matrix ) ;
void GLUIController_add_element (struct GLUIController* self, struct GLUIElement * the_element ) ;
void GLUIController_remove_element (struct GLUIController* self, struct GLUIElement * the_element ) ;
void GLUIController_set_focus (struct GLUIController* self, struct GLUIElement * the_element ) ;
struct CLDataList * GLUIController_intersected_elements_at_x_y (struct GLUIController* self, float the_x , float the_y , MLVector3 * the_line_a , MLVector3 * the_line_b ) ;
void GLUIController_mouse_down_at_x_y (struct GLUIController* self, float the_x , float the_y ) ;
void GLUIController_mouse_up_at_x_y (struct GLUIController* self, float the_x , float the_y ) ;
void GLUIController_mouse_move_at_x_y (struct GLUIController* self, float the_x , float the_y ) ;
void GLUIController_key_down_characters (struct GLUIController* self, char * the_characters ) ;
void GLUIController_scroll_x_y (struct GLUIController* self, float the_x , float the_y ) ;
void GLUIController_init (struct GLUIController* self ) ;
void GLUIController_retain (struct GLUIController* self ) ;
void GLUIController_release (struct GLUIController* self ) ;
void GLUIController_event (struct GLUIController* self, int the_id , void * the_source , void * the_data ) ;
void GLUIController_describe (struct GLUIController* self ) ;
void GLUITrafo_CreateClass( );
struct GLUITrafo* GLUITrafo_alloc( );
void GLUITrafo_init (struct GLUITrafo* self ) ;
MLMatrix4 GLUITrafo_matrix (struct GLUITrafo* self ) ;
void GLUITrafo_describe (struct GLUITrafo* self ) ;
void GLUITrafo_destruct (struct GLUITrafo* self ) ;
void GLUITrafo_retain (struct GLUITrafo* self ) ;
void GLUITrafo_release (struct GLUITrafo* self ) ;
void GLUITrafo_event (struct GLUITrafo* self, int the_id , void * the_source , void * the_data ) ;
void PRCodingRoom_CreateClass( );
struct PRCodingRoom* PRCodingRoom_alloc( );
void PRCodingRoom_init_name_frame_controller (struct PRCodingRoom* self, char * the_name , MLVector4 the_frame , struct PRController * the_controller ) ;
void PRCodingRoom_build (struct PRCodingRoom* self ) ;
void PRCodingRoom_destruct (struct PRCodingRoom* self ) ;
void PRCodingRoom_create_info_view (struct PRCodingRoom* self, char * the_image , char * the_large_image , char * the_title_label , char * the_subtitle_label , char * the_description_label , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRCodingRoom_create_empty_view (struct PRCodingRoom* self, MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRCodingRoom_create_texture_area (struct PRCodingRoom* self, struct GLTextureSquare * the_texture , float the_width , float the_height , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRCodingRoom_create_image_area (struct PRCodingRoom* self, char * the_path , float the_width , float the_height , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRCodingRoom_update (struct PRCodingRoom* self ) ;
void PRCodingRoom_step_right (struct PRCodingRoom* self ) ;
void PRCodingRoom_step_left (struct PRCodingRoom* self ) ;
void PRCodingRoom_collapse (struct PRCodingRoom* self ) ;
void PRCodingRoom_init_name_frame (struct PRCodingRoom* self, char * the_name , MLVector4 the_frame ) ;
void PRCodingRoom_set_level (struct PRCodingRoom* self, int the_level ) ;
void PRCodingRoom_set_group (struct PRCodingRoom* self, int the_group ) ;
void PRCodingRoom_set_texture (struct PRCodingRoom* self, GLuint the_texture ) ;
void PRCodingRoom_set_texture_coords (struct PRCodingRoom* self, MLVector4 theCoords ) ;
void PRCodingRoom_set_color (struct PRCodingRoom* self, float the_r , float the_g , float the_b , float theA ) ;
void PRCodingRoom_set_origo (struct PRCodingRoom* self, MLVector3 the_origo ) ;
void PRCodingRoom_set_extent (struct PRCodingRoom* self, MLVector3 the_extent ) ;
void PRCodingRoom_set_trafo (struct PRCodingRoom* self, MLMatrix4 the_trafo , char the_identity_flag ) ;
void PRCodingRoom_update_frame (struct PRCodingRoom* self ) ;
void PRCodingRoom_update_trafo (struct PRCodingRoom* self ) ;
void PRCodingRoom_get_absolute_frame (struct PRCodingRoom* self, MLVector3 * the_a , MLVector3 * the_b , MLVector3 * the_c , MLVector3 * the_d ) ;
void PRCodingRoom_finalize_frame (struct PRCodingRoom* self ) ;
void PRCodingRoom_add_element (struct PRCodingRoom* self, struct GLUIElement * the_element ) ;
void PRCodingRoom_remove_element (struct PRCodingRoom* self, struct GLUIElement * the_element ) ;
void PRCodingRoom_attach (struct PRCodingRoom* self, struct GLUIModelDrawer * the_drawer ) ;
void PRCodingRoom_detach (struct PRCodingRoom* self, struct GLUIModelDrawer * the_drawer ) ;
MLVector3 PRCodingRoom_get_relative_touch_line_a_line_b (struct PRCodingRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRCodingRoom_intersect_line_a_line_b_elements (struct PRCodingRoom* self, MLVector3 the_line_a , MLVector3 the_line_b , struct CLDataList * elements ) ;
void PRCodingRoom_touch_began (struct PRCodingRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRCodingRoom_touch_moved (struct PRCodingRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRCodingRoom_touch_ended (struct PRCodingRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRCodingRoom_key_down_characters (struct PRCodingRoom* self, char * the_characters ) ;
void PRCodingRoom_key_up_characters (struct PRCodingRoom* self, char * the_characters ) ;
void PRCodingRoom_scroll_x_y (struct PRCodingRoom* self, float the_x , float the_y ) ;
void PRCodingRoom_focus_on (struct PRCodingRoom* self ) ;
void PRCodingRoom_focus_off (struct PRCodingRoom* self ) ;
void PRCodingRoom_init (struct PRCodingRoom* self ) ;
void PRCodingRoom_retain (struct PRCodingRoom* self ) ;
void PRCodingRoom_release (struct PRCodingRoom* self ) ;
void PRCodingRoom_event (struct PRCodingRoom* self, int the_id , void * the_source , void * the_data ) ;
void PRCodingRoom_describe (struct PRCodingRoom* self ) ;
void PRDesignRoom_CreateClass( );
struct PRDesignRoom* PRDesignRoom_alloc( );
void PRDesignRoom_init_name_frame_controller (struct PRDesignRoom* self, char * the_name , MLVector4 the_frame , struct PRController * the_controller ) ;
void PRDesignRoom_build (struct PRDesignRoom* self ) ;
void PRDesignRoom_destruct (struct PRDesignRoom* self ) ;
void PRDesignRoom_create_info_view (struct PRDesignRoom* self, char * the_image , char * the_large_image , char * the_title_label , char * the_subtitle_label , char * the_description_label , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRDesignRoom_create_empty_view (struct PRDesignRoom* self, MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRDesignRoom_create_texture_area (struct PRDesignRoom* self, struct GLTextureSquare * the_texture , float the_width , float the_height , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRDesignRoom_create_image_area (struct PRDesignRoom* self, char * the_path , float the_width , float the_height , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRDesignRoom_update (struct PRDesignRoom* self ) ;
void PRDesignRoom_step_right (struct PRDesignRoom* self ) ;
void PRDesignRoom_step_left (struct PRDesignRoom* self ) ;
void PRDesignRoom_collapse (struct PRDesignRoom* self ) ;
void PRDesignRoom_init_name_frame (struct PRDesignRoom* self, char * the_name , MLVector4 the_frame ) ;
void PRDesignRoom_set_level (struct PRDesignRoom* self, int the_level ) ;
void PRDesignRoom_set_group (struct PRDesignRoom* self, int the_group ) ;
void PRDesignRoom_set_texture (struct PRDesignRoom* self, GLuint the_texture ) ;
void PRDesignRoom_set_texture_coords (struct PRDesignRoom* self, MLVector4 theCoords ) ;
void PRDesignRoom_set_color (struct PRDesignRoom* self, float the_r , float the_g , float the_b , float theA ) ;
void PRDesignRoom_set_origo (struct PRDesignRoom* self, MLVector3 the_origo ) ;
void PRDesignRoom_set_extent (struct PRDesignRoom* self, MLVector3 the_extent ) ;
void PRDesignRoom_set_trafo (struct PRDesignRoom* self, MLMatrix4 the_trafo , char the_identity_flag ) ;
void PRDesignRoom_update_frame (struct PRDesignRoom* self ) ;
void PRDesignRoom_update_trafo (struct PRDesignRoom* self ) ;
void PRDesignRoom_get_absolute_frame (struct PRDesignRoom* self, MLVector3 * the_a , MLVector3 * the_b , MLVector3 * the_c , MLVector3 * the_d ) ;
void PRDesignRoom_finalize_frame (struct PRDesignRoom* self ) ;
void PRDesignRoom_add_element (struct PRDesignRoom* self, struct GLUIElement * the_element ) ;
void PRDesignRoom_remove_element (struct PRDesignRoom* self, struct GLUIElement * the_element ) ;
void PRDesignRoom_attach (struct PRDesignRoom* self, struct GLUIModelDrawer * the_drawer ) ;
void PRDesignRoom_detach (struct PRDesignRoom* self, struct GLUIModelDrawer * the_drawer ) ;
MLVector3 PRDesignRoom_get_relative_touch_line_a_line_b (struct PRDesignRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRDesignRoom_intersect_line_a_line_b_elements (struct PRDesignRoom* self, MLVector3 the_line_a , MLVector3 the_line_b , struct CLDataList * elements ) ;
void PRDesignRoom_touch_began (struct PRDesignRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRDesignRoom_touch_moved (struct PRDesignRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRDesignRoom_touch_ended (struct PRDesignRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRDesignRoom_key_down_characters (struct PRDesignRoom* self, char * the_characters ) ;
void PRDesignRoom_key_up_characters (struct PRDesignRoom* self, char * the_characters ) ;
void PRDesignRoom_scroll_x_y (struct PRDesignRoom* self, float the_x , float the_y ) ;
void PRDesignRoom_focus_on (struct PRDesignRoom* self ) ;
void PRDesignRoom_focus_off (struct PRDesignRoom* self ) ;
void PRDesignRoom_init (struct PRDesignRoom* self ) ;
void PRDesignRoom_retain (struct PRDesignRoom* self ) ;
void PRDesignRoom_release (struct PRDesignRoom* self ) ;
void PRDesignRoom_event (struct PRDesignRoom* self, int the_id , void * the_source , void * the_data ) ;
void PRDesignRoom_describe (struct PRDesignRoom* self ) ;
void PRMusicRoom_CreateClass( );
struct PRMusicRoom* PRMusicRoom_alloc( );
void PRMusicRoom_init_name_frame_controller (struct PRMusicRoom* self, char * the_name , MLVector4 the_frame , struct PRController * the_controller ) ;
void PRMusicRoom_build (struct PRMusicRoom* self ) ;
void PRMusicRoom_destruct (struct PRMusicRoom* self ) ;
void PRMusicRoom_create_info_view (struct PRMusicRoom* self, char * the_image , char * the_large_image , char * the_title_label , char * the_subtitle_label , char * the_description_label , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRMusicRoom_create_empty_view (struct PRMusicRoom* self, MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRMusicRoom_create_texture_area (struct PRMusicRoom* self, struct GLTextureSquare * the_texture , float the_width , float the_height , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRMusicRoom_create_image_area (struct PRMusicRoom* self, char * the_path , float the_width , float the_height , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRMusicRoom_update (struct PRMusicRoom* self ) ;
void PRMusicRoom_step_right (struct PRMusicRoom* self ) ;
void PRMusicRoom_step_left (struct PRMusicRoom* self ) ;
void PRMusicRoom_collapse (struct PRMusicRoom* self ) ;
void PRMusicRoom_init_name_frame (struct PRMusicRoom* self, char * the_name , MLVector4 the_frame ) ;
void PRMusicRoom_set_level (struct PRMusicRoom* self, int the_level ) ;
void PRMusicRoom_set_group (struct PRMusicRoom* self, int the_group ) ;
void PRMusicRoom_set_texture (struct PRMusicRoom* self, GLuint the_texture ) ;
void PRMusicRoom_set_texture_coords (struct PRMusicRoom* self, MLVector4 theCoords ) ;
void PRMusicRoom_set_color (struct PRMusicRoom* self, float the_r , float the_g , float the_b , float theA ) ;
void PRMusicRoom_set_origo (struct PRMusicRoom* self, MLVector3 the_origo ) ;
void PRMusicRoom_set_extent (struct PRMusicRoom* self, MLVector3 the_extent ) ;
void PRMusicRoom_set_trafo (struct PRMusicRoom* self, MLMatrix4 the_trafo , char the_identity_flag ) ;
void PRMusicRoom_update_frame (struct PRMusicRoom* self ) ;
void PRMusicRoom_update_trafo (struct PRMusicRoom* self ) ;
void PRMusicRoom_get_absolute_frame (struct PRMusicRoom* self, MLVector3 * the_a , MLVector3 * the_b , MLVector3 * the_c , MLVector3 * the_d ) ;
void PRMusicRoom_finalize_frame (struct PRMusicRoom* self ) ;
void PRMusicRoom_add_element (struct PRMusicRoom* self, struct GLUIElement * the_element ) ;
void PRMusicRoom_remove_element (struct PRMusicRoom* self, struct GLUIElement * the_element ) ;
void PRMusicRoom_attach (struct PRMusicRoom* self, struct GLUIModelDrawer * the_drawer ) ;
void PRMusicRoom_detach (struct PRMusicRoom* self, struct GLUIModelDrawer * the_drawer ) ;
MLVector3 PRMusicRoom_get_relative_touch_line_a_line_b (struct PRMusicRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRMusicRoom_intersect_line_a_line_b_elements (struct PRMusicRoom* self, MLVector3 the_line_a , MLVector3 the_line_b , struct CLDataList * elements ) ;
void PRMusicRoom_touch_began (struct PRMusicRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRMusicRoom_touch_moved (struct PRMusicRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRMusicRoom_touch_ended (struct PRMusicRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRMusicRoom_key_down_characters (struct PRMusicRoom* self, char * the_characters ) ;
void PRMusicRoom_key_up_characters (struct PRMusicRoom* self, char * the_characters ) ;
void PRMusicRoom_scroll_x_y (struct PRMusicRoom* self, float the_x , float the_y ) ;
void PRMusicRoom_focus_on (struct PRMusicRoom* self ) ;
void PRMusicRoom_focus_off (struct PRMusicRoom* self ) ;
void PRMusicRoom_init (struct PRMusicRoom* self ) ;
void PRMusicRoom_retain (struct PRMusicRoom* self ) ;
void PRMusicRoom_release (struct PRMusicRoom* self ) ;
void PRMusicRoom_event (struct PRMusicRoom* self, int the_id , void * the_source , void * the_data ) ;
void PRMusicRoom_describe (struct PRMusicRoom* self ) ;
void PRRoom_CreateClass( );
struct PRRoom* PRRoom_alloc( );
void PRRoom_init_name_frame_controller (struct PRRoom* self, char * the_name , MLVector4 the_frame , struct PRController * the_controller ) ;
void PRRoom_destruct (struct PRRoom* self ) ;
void PRRoom_create_info_view (struct PRRoom* self, char * the_image , char * the_large_image , char * the_title_label , char * the_subtitle_label , char * the_description_label , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRRoom_create_empty_view (struct PRRoom* self, MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRRoom_create_texture_area (struct PRRoom* self, struct GLTextureSquare * the_texture , float the_width , float the_height , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRRoom_create_image_area (struct PRRoom* self, char * the_path , float the_width , float the_height , MLVector3 the_scale , MLVector3 the_rotation , MLVector3 the_translation ) ;
void PRRoom_update (struct PRRoom* self ) ;
void PRRoom_step_right (struct PRRoom* self ) ;
void PRRoom_step_left (struct PRRoom* self ) ;
void PRRoom_build (struct PRRoom* self ) ;
void PRRoom_collapse (struct PRRoom* self ) ;
void PRRoom_init_name_frame (struct PRRoom* self, char * the_name , MLVector4 the_frame ) ;
void PRRoom_set_level (struct PRRoom* self, int the_level ) ;
void PRRoom_set_group (struct PRRoom* self, int the_group ) ;
void PRRoom_set_texture (struct PRRoom* self, GLuint the_texture ) ;
void PRRoom_set_texture_coords (struct PRRoom* self, MLVector4 theCoords ) ;
void PRRoom_set_color (struct PRRoom* self, float the_r , float the_g , float the_b , float theA ) ;
void PRRoom_set_origo (struct PRRoom* self, MLVector3 the_origo ) ;
void PRRoom_set_extent (struct PRRoom* self, MLVector3 the_extent ) ;
void PRRoom_set_trafo (struct PRRoom* self, MLMatrix4 the_trafo , char the_identity_flag ) ;
void PRRoom_update_frame (struct PRRoom* self ) ;
void PRRoom_update_trafo (struct PRRoom* self ) ;
void PRRoom_get_absolute_frame (struct PRRoom* self, MLVector3 * the_a , MLVector3 * the_b , MLVector3 * the_c , MLVector3 * the_d ) ;
void PRRoom_finalize_frame (struct PRRoom* self ) ;
void PRRoom_add_element (struct PRRoom* self, struct GLUIElement * the_element ) ;
void PRRoom_remove_element (struct PRRoom* self, struct GLUIElement * the_element ) ;
void PRRoom_attach (struct PRRoom* self, struct GLUIModelDrawer * the_drawer ) ;
void PRRoom_detach (struct PRRoom* self, struct GLUIModelDrawer * the_drawer ) ;
MLVector3 PRRoom_get_relative_touch_line_a_line_b (struct PRRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRRoom_intersect_line_a_line_b_elements (struct PRRoom* self, MLVector3 the_line_a , MLVector3 the_line_b , struct CLDataList * elements ) ;
void PRRoom_touch_began (struct PRRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRRoom_touch_moved (struct PRRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRRoom_touch_ended (struct PRRoom* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void PRRoom_key_down_characters (struct PRRoom* self, char * the_characters ) ;
void PRRoom_key_up_characters (struct PRRoom* self, char * the_characters ) ;
void PRRoom_scroll_x_y (struct PRRoom* self, float the_x , float the_y ) ;
void PRRoom_focus_on (struct PRRoom* self ) ;
void PRRoom_focus_off (struct PRRoom* self ) ;
void PRRoom_init (struct PRRoom* self ) ;
void PRRoom_retain (struct PRRoom* self ) ;
void PRRoom_release (struct PRRoom* self ) ;
void PRRoom_event (struct PRRoom* self, int the_id , void * the_source , void * the_data ) ;
void PRRoom_describe (struct PRRoom* self ) ;
void GLBitmapRGBA_CreateClass( );
struct GLBitmapRGBA* GLBitmapRGBA_alloc( );
void GLBitmapRGBA_init_width_height (struct GLBitmapRGBA* self, int theWidth , int theHeight ) ;
void GLBitmapRGBA_destruct (struct GLBitmapRGBA* self ) ;
void GLBitmapRGBA_fill_sx_sy_ex_ey_r_g_b_a (struct GLBitmapRGBA* self, int theSX , int theSY , int theEX , int theEY , float the_r , float the_g , float the_b , float theA ) ;
void GLBitmapRGBA_gradient_sx_sy_ex_ey_r_g_b_a_r_g_b_a (struct GLBitmapRGBA* self, int theSX , int theSY , int theEX , int theEY , float theSR , float theSG , float theSB , float theSA , float theER , float theEG , float theEB , float theEA ) ;
void GLBitmapRGBA_set_x_y_r_g_b_a (struct GLBitmapRGBA* self, int the_x , int the_y , int the_r , int the_g , int the_b , int theA ) ;
void GLBitmapRGBA_get_x_y_r_g_b_a (struct GLBitmapRGBA* self, int the_x , int the_y , int * the_r , int * the_g , int * the_b , int * theA ) ;
void GLBitmapRGBA_add_shadow (struct GLBitmapRGBA* self ) ;
void GLBitmapRGBA_push_shadow_with_distance (struct GLBitmapRGBA* self, int theDistance ) ;
void GLBitmapRGBA_blend_bitmap_x_y (struct GLBitmapRGBA* self, struct GLBitmapRGBA * the_bitmap , int the_x , int the_y ) ;
void GLBitmapRGBA_init (struct GLBitmapRGBA* self ) ;
void GLBitmapRGBA_retain (struct GLBitmapRGBA* self ) ;
void GLBitmapRGBA_release (struct GLBitmapRGBA* self ) ;
void GLBitmapRGBA_event (struct GLBitmapRGBA* self, int the_id , void * the_source , void * the_data ) ;
void GLBitmapRGBA_describe (struct GLBitmapRGBA* self ) ;
void GLTextureSquare_CreateClass( );
struct GLTextureSquare* GLTextureSquare_alloc( );
void GLTextureSquare_init_width_height (struct GLTextureSquare* self, int the_width , int the_height ) ;
void GLTextureSquare_destruct (struct GLTextureSquare* self ) ;
void GLTextureSquare_clone_bitmap (struct GLTextureSquare* self, struct GLBitmapRGBA * the_bitmap ) ;
void GLTextureSquare_init (struct GLTextureSquare* self ) ;
void GLTextureSquare_retain (struct GLTextureSquare* self ) ;
void GLTextureSquare_release (struct GLTextureSquare* self ) ;
void GLTextureSquare_event (struct GLTextureSquare* self, int the_id , void * the_source , void * the_data ) ;
void GLTextureSquare_describe (struct GLTextureSquare* self ) ;
void GLBitmapRGBAUtils_CreateClass( );
struct GLBitmapRGBAUtils* GLBitmapRGBAUtils_alloc( );
struct GLBitmapRGBA * GLBitmapRGBAUtils_create_bitmap_width_height_text_size (struct GLBitmapRGBAUtils* self, int the_width , int the_height , char * the_text , int the_size ) ;
struct GLBitmapRGBA * GLBitmapRGBAUtils_create_bitmap_map_width_height_r_g_b (struct GLBitmapRGBAUtils* self, unsigned char * the_map , int the_width , int the_height , int r , int g , int b ) ;
struct GLBitmapRGBA * GLBitmapRGBAUtils_create_bitmap_pngpath (struct GLBitmapRGBAUtils* self, char * the_path ) ;
void GLUIModel_CreateClass( );
struct GLUIModel* GLUIModel_alloc( );
void GLUIModel_init_name (struct GLUIModel* self, char * the_name ) ;
void GLUIModel_destruct (struct GLUIModel* self ) ;
void GLUIModel_set_color (struct GLUIModel* self, float the_r , float the_g , float the_b , float the_a , GLuint the_corner ) ;
void GLUIModel_set_texture_coord (struct GLUIModel* self, float the_x , float the_y , GLuint the_corner ) ;
void GLUIModel_set_position (struct GLUIModel* self, float the_x , float the_y , float the_z , GLuint the_corner ) ;
void GLUIModel_init (struct GLUIModel* self ) ;
void GLUIModel_retain (struct GLUIModel* self ) ;
void GLUIModel_release (struct GLUIModel* self ) ;
void GLUIModel_event (struct GLUIModel* self, int the_id , void * the_source , void * the_data ) ;
void GLUIModel_describe (struct GLUIModel* self ) ;
void GLUIModelDrawer_CreateClass( );
struct GLUIModelDrawer* GLUIModelDrawer_alloc( );
void GLUIModelDrawer_init (struct GLUIModelDrawer* self ) ;
void GLUIModelDrawer_destruct (struct GLUIModelDrawer* self ) ;
void GLUIModelDrawer_addAttribute_location_components_identifier (struct GLUIModelDrawer* self, int the_location , int the_component_count , const char * the_identifier ) ;
struct GLUIVertexArray * GLUIModelDrawer_get_array_for_group_level_texture_trafo (struct GLUIModelDrawer* self, GLuint the_group , GLuint the_level , GLuint the_texture , MLMatrix4 * the_trafo ) ;
void GLUIModelDrawer_add_model_group_level_texture_trafo (struct GLUIModelDrawer* self, struct GLUIModel * the_model , GLuint the_group , GLuint the_level , GLuint the_texture , MLMatrix4 * the_trafo ) ;
void GLUIModelDrawer_remove_model_group_level_texture_trafo (struct GLUIModelDrawer* self, struct GLUIModel * the_model , GLuint the_group , GLuint the_level , GLuint the_texture , MLMatrix4 * the_trafo ) ;
void GLUIModelDrawer_upload (struct GLUIModelDrawer* self ) ;
void GLUIModelDrawer_resend (struct GLUIModelDrawer* self ) ;
void GLUIModelDrawer_render (struct GLUIModelDrawer* self ) ;
void GLUIModelDrawer_retain (struct GLUIModelDrawer* self ) ;
void GLUIModelDrawer_release (struct GLUIModelDrawer* self ) ;
void GLUIModelDrawer_event (struct GLUIModelDrawer* self, int the_id , void * the_source , void * the_data ) ;
void GLUIModelDrawer_describe (struct GLUIModelDrawer* self ) ;
void GLUIParagraph_CreateClass( );
struct GLUIParagraph* GLUIParagraph_alloc( );
void GLUIParagraph_init_name_frame_font_type_align_multiline (struct GLUIParagraph* self, char * the_name , MLVector4 the_frame , struct GLFontTrueType * the_font , char the_type , char the_align , char the_multiline_flag ) ;
void GLUIParagraph_destruct (struct GLUIParagraph* self ) ;
void GLUIParagraph_focus_on (struct GLUIParagraph* self ) ;
void GLUIParagraph_focus_off (struct GLUIParagraph* self ) ;
void GLUIParagraph_add_text (struct GLUIParagraph* self, char * the_text ) ;
void GLUIParagraph_remove_all_text (struct GLUIParagraph* self ) ;
void GLUIParagraph_add_glyph (struct GLUIParagraph* self, int the_codepoint ) ;
void GLUIParagraph_remove_glyph (struct GLUIParagraph* self ) ;
void GLUIParagraph_update_paragraph (struct GLUIParagraph* self ) ;
void GLUIParagraph_update (struct GLUIParagraph* self ) ;
void GLUIParagraph_animate_glyphs (struct GLUIParagraph* self ) ;
void GLUIParagraph_select (struct GLUIParagraph* self ) ;
void GLUIParagraph_touch_began (struct GLUIParagraph* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIParagraph_touch_moved (struct GLUIParagraph* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIParagraph_touch_ended (struct GLUIParagraph* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIParagraph_key_down_characters (struct GLUIParagraph* self, char * the_characters ) ;
void GLUIParagraph_remove_dead_glyphs (struct GLUIParagraph* self ) ;
void GLUIParagraph_show_gylphs_between_x1_x2 (struct GLUIParagraph* self, float the_x1 , float the_x2 ) ;
void GLUIParagraph_show_gylphs_between_y1_y2 (struct GLUIParagraph* self, float the_y1 , float the_y2 ) ;
void GLUIParagraph_init_name_frame (struct GLUIParagraph* self, char * the_name , MLVector4 the_frame ) ;
void GLUIParagraph_set_level (struct GLUIParagraph* self, int the_level ) ;
void GLUIParagraph_set_group (struct GLUIParagraph* self, int the_group ) ;
void GLUIParagraph_set_texture (struct GLUIParagraph* self, GLuint the_texture ) ;
void GLUIParagraph_set_texture_coords (struct GLUIParagraph* self, MLVector4 theCoords ) ;
void GLUIParagraph_set_color (struct GLUIParagraph* self, float the_r , float the_g , float the_b , float theA ) ;
void GLUIParagraph_set_origo (struct GLUIParagraph* self, MLVector3 the_origo ) ;
void GLUIParagraph_set_extent (struct GLUIParagraph* self, MLVector3 the_extent ) ;
void GLUIParagraph_set_trafo (struct GLUIParagraph* self, MLMatrix4 the_trafo , char the_identity_flag ) ;
void GLUIParagraph_update_frame (struct GLUIParagraph* self ) ;
void GLUIParagraph_update_trafo (struct GLUIParagraph* self ) ;
void GLUIParagraph_get_absolute_frame (struct GLUIParagraph* self, MLVector3 * the_a , MLVector3 * the_b , MLVector3 * the_c , MLVector3 * the_d ) ;
void GLUIParagraph_finalize_frame (struct GLUIParagraph* self ) ;
void GLUIParagraph_add_element (struct GLUIParagraph* self, struct GLUIElement * the_element ) ;
void GLUIParagraph_remove_element (struct GLUIParagraph* self, struct GLUIElement * the_element ) ;
void GLUIParagraph_attach (struct GLUIParagraph* self, struct GLUIModelDrawer * the_drawer ) ;
void GLUIParagraph_detach (struct GLUIParagraph* self, struct GLUIModelDrawer * the_drawer ) ;
MLVector3 GLUIParagraph_get_relative_touch_line_a_line_b (struct GLUIParagraph* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIParagraph_intersect_line_a_line_b_elements (struct GLUIParagraph* self, MLVector3 the_line_a , MLVector3 the_line_b , struct CLDataList * elements ) ;
void GLUIParagraph_key_up_characters (struct GLUIParagraph* self, char * the_characters ) ;
void GLUIParagraph_scroll_x_y (struct GLUIParagraph* self, float the_x , float the_y ) ;
void GLUIParagraph_init (struct GLUIParagraph* self ) ;
void GLUIParagraph_retain (struct GLUIParagraph* self ) ;
void GLUIParagraph_release (struct GLUIParagraph* self ) ;
void GLUIParagraph_event (struct GLUIParagraph* self, int the_id , void * the_source , void * the_data ) ;
void GLUIParagraph_describe (struct GLUIParagraph* self ) ;
void GLUITrafoAnimator_CreateClass( );
struct GLUITrafoAnimator* GLUITrafoAnimator_alloc( );
void GLUITrafoAnimator_init (struct GLUITrafoAnimator* self ) ;
void GLUITrafoAnimator_destruct (struct GLUITrafoAnimator* self ) ;
void GLUITrafoAnimator_add_animation (struct GLUITrafoAnimator* self, struct GLUITrafoAnimation * the_animation ) ;
void GLUITrafoAnimator_remove_animation (struct GLUITrafoAnimator* self, struct GLUITrafoAnimation * the_animation ) ;
void GLUITrafoAnimator_start (struct GLUITrafoAnimator* self ) ;
void GLUITrafoAnimator_reset (struct GLUITrafoAnimator* self ) ;
void GLUITrafoAnimator_update (struct GLUITrafoAnimator* self ) ;
void GLUITrafoAnimator_retain (struct GLUITrafoAnimator* self ) ;
void GLUITrafoAnimator_release (struct GLUITrafoAnimator* self ) ;
void GLUITrafoAnimator_event (struct GLUITrafoAnimator* self, int the_id , void * the_source , void * the_data ) ;
void GLUITrafoAnimator_describe (struct GLUITrafoAnimator* self ) ;
void GLUITrafoAnimation_CreateClass( );
struct GLUITrafoAnimation* GLUITrafoAnimation_alloc( );
void GLUITrafoAnimation_init_start_end_steps_easing (struct GLUITrafoAnimation* self, struct GLUITrafo * the_start , struct GLUITrafo * the_end , int the_steps , char the_easing ) ;
void GLUITrafoAnimation_destruct (struct GLUITrafoAnimation* self ) ;
void GLUITrafoAnimation_update (struct GLUITrafoAnimation* self ) ;
void GLUITrafoAnimation_init (struct GLUITrafoAnimation* self ) ;
void GLUITrafoAnimation_retain (struct GLUITrafoAnimation* self ) ;
void GLUITrafoAnimation_release (struct GLUITrafoAnimation* self ) ;
void GLUITrafoAnimation_event (struct GLUITrafoAnimation* self, int the_id , void * the_source , void * the_data ) ;
void GLUITrafoAnimation_describe (struct GLUITrafoAnimation* self ) ;
void GLFontTrueType_CreateClass( );
struct GLFontTrueType* GLFontTrueType_alloc( );
void GLFontTrueType_init_name_path_size_r_g_b (struct GLFontTrueType* self, char * the_name , char * the_path , float the_size , int the_r , int the_g , int the_b ) ;
void GLFontTrueType_destuct (struct GLFontTrueType* self ) ;
char GLFontTrueType_texture_frame_coords_for_codepoint (struct GLFontTrueType* self, GLuint * the_texture , MLVector4 * the_frame , MLVector4 * the_coords , int the_codepoint ) ;
char GLFontTrueType_kerning_for_codeA_codeB (struct GLFontTrueType* self, float * the_kerning , int the_code_a , int the_code_b ) ;
void GLFontTrueType_init (struct GLFontTrueType* self ) ;
void GLFontTrueType_destruct (struct GLFontTrueType* self ) ;
void GLFontTrueType_retain (struct GLFontTrueType* self ) ;
void GLFontTrueType_release (struct GLFontTrueType* self ) ;
void GLFontTrueType_event (struct GLFontTrueType* self, int the_id , void * the_source , void * the_data ) ;
void GLFontTrueType_describe (struct GLFontTrueType* self ) ;
void GLUIShader_CreateClass( );
struct GLUIShader* GLUIShader_alloc( );
void GLUIShader_init (struct GLUIShader* self ) ;
void GLUIShader_init_name (struct GLUIShader* self, char * the_name ) ;
void GLUIShader_destruct (struct GLUIShader* self ) ;
void GLUIShader_add_vertex_shader_source (struct GLUIShader* self, const char * the_source ) ;
void GLUIShader_add_fragment_shader_source (struct GLUIShader* self, const char * the_source ) ;
void GLUIShader_add_attribute_identifier_location (struct GLUIShader* self, const char * the_identifier , GLuint the_location ) ;
void GLUIShader_add_uniform_identifier (struct GLUIShader* self, const char * the_identifier ) ;
GLuint GLUIShader_attribute_location_for_identifier (struct GLUIShader* self, const char * the_identifier ) ;
GLint GLUIShader_uniform_location_for_identifier (struct GLUIShader* self, const char * the_identifier ) ;
void GLUIShader_link (struct GLUIShader* self ) ;
char GLUIShader_compile_shader_type_source (struct GLUIShader* self, GLuint * the_shader , GLenum the_type , const GLchar * the_source ) ;
char GLUIShader_link_program (struct GLUIShader* self ) ;
void GLUIShader_use (struct GLUIShader* self ) ;
void GLUIShader_retain (struct GLUIShader* self ) ;
void GLUIShader_release (struct GLUIShader* self ) ;
void GLUIShader_event (struct GLUIShader* self, int the_id , void * the_source , void * the_data ) ;
void GLUIShader_describe (struct GLUIShader* self ) ;
void TLPixelFont_CreateClass( );
struct TLPixelFont* TLPixelFont_alloc( );
void TLPixelFont_init_character (struct TLPixelFont* self, char the_character ) ;
void TLPixelFont_destruct (struct TLPixelFont* self ) ;
const char * TLPixelFont_pattern_character (struct TLPixelFont* self, char the_character ) ;
void TLPixelFont_init (struct TLPixelFont* self ) ;
void TLPixelFont_retain (struct TLPixelFont* self ) ;
void TLPixelFont_release (struct TLPixelFont* self ) ;
void TLPixelFont_event (struct TLPixelFont* self, int the_id , void * the_source , void * the_data ) ;
void TLPixelFont_describe (struct TLPixelFont* self ) ;
void TLPixelText_CreateClass( );
struct TLPixelText* TLPixelText_alloc( );
void TLPixelText_init_string (struct TLPixelText* self, struct CLString * the_string ) ;
void TLPixelText_init_cstring (struct TLPixelText* self, char * the_string ) ;
void TLPixelText_destruct (struct TLPixelText* self ) ;
void TLPixelText_init (struct TLPixelText* self ) ;
void TLPixelText_retain (struct TLPixelText* self ) ;
void TLPixelText_release (struct TLPixelText* self ) ;
void TLPixelText_event (struct TLPixelText* self, int the_id , void * the_source , void * the_data ) ;
void TLPixelText_describe (struct TLPixelText* self ) ;
void GLUIVertexArray_CreateClass( );
struct GLUIVertexArray* GLUIVertexArray_alloc( );
void GLUIVertexArray_init (struct GLUIVertexArray* self, GLuint the_group , GLuint the_level , GLuint the_texture , MLMatrix4 * the_trafo ) ;
void GLUIVertexArray_destruct (struct GLUIVertexArray* self ) ;
void GLUIVertexArray_retain (struct GLUIVertexArray* self ) ;
void GLUIVertexArray_release (struct GLUIVertexArray* self ) ;
void GLUIVertexArray_event (struct GLUIVertexArray* self, int the_id , void * the_source , void * the_data ) ;
void GLUIVertexArray_describe (struct GLUIVertexArray* self ) ;
void GLUICursor_CreateClass( );
struct GLUICursor* GLUICursor_alloc( );
void GLUICursor_init_name_frame (struct GLUICursor* self, char * the_name , MLVector4 the_frame ) ;
void GLUICursor_update (struct GLUICursor* self ) ;
void GLUICursor_destruct (struct GLUICursor* self ) ;
void GLUICursor_set_level (struct GLUICursor* self, int the_level ) ;
void GLUICursor_set_group (struct GLUICursor* self, int the_group ) ;
void GLUICursor_set_texture (struct GLUICursor* self, GLuint the_texture ) ;
void GLUICursor_set_texture_coords (struct GLUICursor* self, MLVector4 theCoords ) ;
void GLUICursor_set_color (struct GLUICursor* self, float the_r , float the_g , float the_b , float theA ) ;
void GLUICursor_set_origo (struct GLUICursor* self, MLVector3 the_origo ) ;
void GLUICursor_set_extent (struct GLUICursor* self, MLVector3 the_extent ) ;
void GLUICursor_set_trafo (struct GLUICursor* self, MLMatrix4 the_trafo , char the_identity_flag ) ;
void GLUICursor_update_frame (struct GLUICursor* self ) ;
void GLUICursor_update_trafo (struct GLUICursor* self ) ;
void GLUICursor_get_absolute_frame (struct GLUICursor* self, MLVector3 * the_a , MLVector3 * the_b , MLVector3 * the_c , MLVector3 * the_d ) ;
void GLUICursor_finalize_frame (struct GLUICursor* self ) ;
void GLUICursor_add_element (struct GLUICursor* self, struct GLUIElement * the_element ) ;
void GLUICursor_remove_element (struct GLUICursor* self, struct GLUIElement * the_element ) ;
void GLUICursor_attach (struct GLUICursor* self, struct GLUIModelDrawer * the_drawer ) ;
void GLUICursor_detach (struct GLUICursor* self, struct GLUIModelDrawer * the_drawer ) ;
MLVector3 GLUICursor_get_relative_touch_line_a_line_b (struct GLUICursor* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUICursor_intersect_line_a_line_b_elements (struct GLUICursor* self, MLVector3 the_line_a , MLVector3 the_line_b , struct CLDataList * elements ) ;
void GLUICursor_touch_began (struct GLUICursor* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUICursor_touch_moved (struct GLUICursor* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUICursor_touch_ended (struct GLUICursor* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUICursor_key_down_characters (struct GLUICursor* self, char * the_characters ) ;
void GLUICursor_key_up_characters (struct GLUICursor* self, char * the_characters ) ;
void GLUICursor_scroll_x_y (struct GLUICursor* self, float the_x , float the_y ) ;
void GLUICursor_focus_on (struct GLUICursor* self ) ;
void GLUICursor_focus_off (struct GLUICursor* self ) ;
void GLUICursor_init (struct GLUICursor* self ) ;
void GLUICursor_retain (struct GLUICursor* self ) ;
void GLUICursor_release (struct GLUICursor* self ) ;
void GLUICursor_event (struct GLUICursor* self, int the_id , void * the_source , void * the_data ) ;
void GLUICursor_describe (struct GLUICursor* self ) ;
void GLUIGlyph_CreateClass( );
struct GLUIGlyph* GLUIGlyph_alloc( );
void GLUIGlyph_init_name_frame (struct GLUIGlyph* self, char * the_name , MLVector4 the_frame ) ;
void GLUIGlyph_destruct (struct GLUIGlyph* self ) ;
void GLUIGlyph_shrink (struct GLUIGlyph* self, float the_size , char the_side ) ;
void GLUIGlyph_expand (struct GLUIGlyph* self ) ;
void GLUIGlyph_animate_to_position (struct GLUIGlyph* self, int the_steps ) ;
void GLUIGlyph_update (struct GLUIGlyph* self ) ;
void GLUIGlyph_event (struct GLUIGlyph* self, int the_id , void * the_source , void * the_data ) ;
void GLUIGlyph_set_level (struct GLUIGlyph* self, int the_level ) ;
void GLUIGlyph_set_group (struct GLUIGlyph* self, int the_group ) ;
void GLUIGlyph_set_texture (struct GLUIGlyph* self, GLuint the_texture ) ;
void GLUIGlyph_set_texture_coords (struct GLUIGlyph* self, MLVector4 theCoords ) ;
void GLUIGlyph_set_color (struct GLUIGlyph* self, float the_r , float the_g , float the_b , float theA ) ;
void GLUIGlyph_set_origo (struct GLUIGlyph* self, MLVector3 the_origo ) ;
void GLUIGlyph_set_extent (struct GLUIGlyph* self, MLVector3 the_extent ) ;
void GLUIGlyph_set_trafo (struct GLUIGlyph* self, MLMatrix4 the_trafo , char the_identity_flag ) ;
void GLUIGlyph_update_frame (struct GLUIGlyph* self ) ;
void GLUIGlyph_update_trafo (struct GLUIGlyph* self ) ;
void GLUIGlyph_get_absolute_frame (struct GLUIGlyph* self, MLVector3 * the_a , MLVector3 * the_b , MLVector3 * the_c , MLVector3 * the_d ) ;
void GLUIGlyph_finalize_frame (struct GLUIGlyph* self ) ;
void GLUIGlyph_add_element (struct GLUIGlyph* self, struct GLUIElement * the_element ) ;
void GLUIGlyph_remove_element (struct GLUIGlyph* self, struct GLUIElement * the_element ) ;
void GLUIGlyph_attach (struct GLUIGlyph* self, struct GLUIModelDrawer * the_drawer ) ;
void GLUIGlyph_detach (struct GLUIGlyph* self, struct GLUIModelDrawer * the_drawer ) ;
MLVector3 GLUIGlyph_get_relative_touch_line_a_line_b (struct GLUIGlyph* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIGlyph_intersect_line_a_line_b_elements (struct GLUIGlyph* self, MLVector3 the_line_a , MLVector3 the_line_b , struct CLDataList * elements ) ;
void GLUIGlyph_touch_began (struct GLUIGlyph* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIGlyph_touch_moved (struct GLUIGlyph* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIGlyph_touch_ended (struct GLUIGlyph* self, MLVector3 the_line_a , MLVector3 the_line_b ) ;
void GLUIGlyph_key_down_characters (struct GLUIGlyph* self, char * the_characters ) ;
void GLUIGlyph_key_up_characters (struct GLUIGlyph* self, char * the_characters ) ;
void GLUIGlyph_scroll_x_y (struct GLUIGlyph* self, float the_x , float the_y ) ;
void GLUIGlyph_focus_on (struct GLUIGlyph* self ) ;
void GLUIGlyph_focus_off (struct GLUIGlyph* self ) ;
void GLUIGlyph_init (struct GLUIGlyph* self ) ;
void GLUIGlyph_retain (struct GLUIGlyph* self ) ;
void GLUIGlyph_release (struct GLUIGlyph* self ) ;
void GLUIGlyph_describe (struct GLUIGlyph* self ) ;
void TLTextMetrics_CreateClass( );
struct TLTextMetrics* TLTextMetrics_alloc( );
void TLTextMetrics_init_type_align_lineheight_width (struct TLTextMetrics* self, char the_type , char the_align , float the_size , float the_width ) ;
void TLTextMetrics_destruct (struct TLTextMetrics* self ) ;
void TLTextMetrics_add_font (struct TLTextMetrics* self, struct TLFontMetrics * the_glyph ) ;
void TLTextMetrics_add_font_index (struct TLTextMetrics* self, struct TLFontMetrics * the_glyph , long the_index ) ;
void TLTextMetrics_remove (struct TLTextMetrics* self ) ;
void TLTextMetrics_remove_index (struct TLTextMetrics* self, long the_index ) ;
void TLTextMetrics_remove_all_fonts (struct TLTextMetrics* self ) ;
void TLTextMetrics_update (struct TLTextMetrics* self ) ;
void TLTextMetrics_update_single_line (struct TLTextMetrics* self ) ;
void TLTextMetrics_update_multiline (struct TLTextMetrics* self ) ;
void TLTextMetrics_justify_line (struct TLTextMetrics* self, float * the_line_x , long the_spaces , float the_cursor_y , struct CLDataList * the_line ) ;
void TLTextMetrics_center_line (struct TLTextMetrics* self, float * the_line_x , float the_cursor_y , struct CLDataList * the_line ) ;
unsigned long TLTextMetrics_glyph_index_at_x_y (struct TLTextMetrics* self, float the_x , float the_y ) ;
void TLTextMetrics_init (struct TLTextMetrics* self ) ;
void TLTextMetrics_retain (struct TLTextMetrics* self ) ;
void TLTextMetrics_release (struct TLTextMetrics* self ) ;
void TLTextMetrics_event (struct TLTextMetrics* self, int the_id , void * the_source , void * the_data ) ;
void TLTextMetrics_describe (struct TLTextMetrics* self ) ;
void TLFontMetrics_CreateClass( );
struct TLFontMetrics* TLFontMetrics_alloc( );
void TLFontMetrics_init (struct TLFontMetrics* self ) ;
void TLFontMetrics_destruct (struct TLFontMetrics* self ) ;
void TLFontMetrics_retain (struct TLFontMetrics* self ) ;
void TLFontMetrics_release (struct TLFontMetrics* self ) ;
void TLFontMetrics_event (struct TLFontMetrics* self, int the_id , void * the_source , void * the_data ) ;
void TLFontMetrics_describe (struct TLFontMetrics* self ) ;
void GLTextureMap_CreateClass( );
struct GLTextureMap* GLTextureMap_alloc( );
void GLTextureMap_init_width_height (struct GLTextureMap* self, int theWidth , int theHeight ) ;
void GLTextureMap_destruct (struct GLTextureMap* self ) ;
void GLTextureMap_create_bitmap_texture (struct GLTextureMap* self ) ;
char GLTextureMap_texture_frame_coords_for_key (struct GLTextureMap* self, GLuint * the_texture , MLVector4 * the_frame , MLVector4 * the_coords , int the_key ) ;
MLVector4 GLTextureMap_add_bitmap_for_key (struct GLTextureMap* self, struct GLBitmapRGBA * the_bitmap , int the_key ) ;
void GLTextureMap_init (struct GLTextureMap* self ) ;
void GLTextureMap_retain (struct GLTextureMap* self ) ;
void GLTextureMap_release (struct GLTextureMap* self ) ;
void GLTextureMap_event (struct GLTextureMap* self, int the_id , void * the_source , void * the_data ) ;
void GLTextureMap_describe (struct GLTextureMap* self ) ;
void GLShader_CreateClass( );
struct GLShader* GLShader_alloc( );
void GLShader_init_name (struct GLShader* self, char * the_name ) ;
void GLShader_destruct (struct GLShader* self ) ;
void GLShader_add_vertex_shader_source (struct GLShader* self, const char * the_source ) ;
void GLShader_add_fragment_shader_source (struct GLShader* self, const char * the_source ) ;
void GLShader_add_attribute_identifier_location (struct GLShader* self, const char * the_identifier , GLuint the_location ) ;
void GLShader_add_uniform_identifier (struct GLShader* self, const char * the_identifier ) ;
GLuint GLShader_attribute_location_for_identifier (struct GLShader* self, const char * the_identifier ) ;
GLint GLShader_uniform_location_for_identifier (struct GLShader* self, const char * the_identifier ) ;
void GLShader_link (struct GLShader* self ) ;
char GLShader_compile_shader_type_source (struct GLShader* self, GLuint * the_shader , GLenum the_type , const GLchar * the_source ) ;
char GLShader_link_program (struct GLShader* self ) ;
void GLShader_use (struct GLShader* self ) ;
void GLShader_init (struct GLShader* self ) ;
void GLShader_retain (struct GLShader* self ) ;
void GLShader_release (struct GLShader* self ) ;
void GLShader_event (struct GLShader* self, int the_id , void * the_source , void * the_data ) ;
void GLShader_describe (struct GLShader* self ) ;
#endif
